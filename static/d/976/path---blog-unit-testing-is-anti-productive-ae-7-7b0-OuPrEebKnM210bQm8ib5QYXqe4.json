{"data":{"wordpressPost":{"title":"Unit testing is anti-productive","content":"<div class=\"zemanta-img\" style=\"margin: 1em; display: block;\">\n<div>\n<dl class=\"wp-caption alignright\" style=\"width: 250px;\">\n<dt class=\"wp-caption-dt\"><a href=\"http://www.flickr.com/photos/41864721@N00/3652816293/\"><img title=\"Salish Mist\" src=\"http://farm4.static.flickr.com/3121/3652816293_3853125da9_m.jpg\" alt=\"Salish Mist\" /></a></dt>\n<dd class=\"wp-caption-dd zemanta-img-attribution\" style=\"font-size: 0.8em;\">Image by <a href=\"http://www.flickr.com/photos/41864721@N00/3652816293/\">ecstaticist</a> via Flickr</dd>\n</dl>\n</div>\n</div>\n<p>Today I finally got my feet wet with something I&#8217;ve been meaning to try on for size ever since reading Clean Code, during my trip to <a class=\"zem_slink\" title=\"Vienna\" rel=\"geolocation\" href=\"http://maps.google.com/maps?ll=48.20875,16.3725833333&amp;spn=0.1,0.1&amp;q=48.20875,16.3725833333 (Vienna)&amp;t=h\">Vienna</a> last autumn; wow has it really been that long already, where&#8217;d winter and spring hide?</p>\n<p>Anyway, so at about midnight last night I finally embarked on the process of coding up a new feature for <a class=\"zem_slink\" title=\"Twitulater\" rel=\"blog\" href=\"http://twitulater.com\">Twitulater</a>, or at least its server-side bits, after some prep work. Now since this is a rather <a class=\"zem_slink\" title=\"Mission critical\" rel=\"wikipedia\" href=\"http://en.wikipedia.org/wiki/Mission_critical\">mission critical</a> system that I&#8217;d very much like to be somewhat reliable and rock-solid, <a class=\"zem_slink\" title=\"Unit testing\" rel=\"wikipedia\" href=\"http://en.wikipedia.org/wiki/Unit_testing\">unit testing</a> seemed to be the way to go.</p>\n<p>Downloading <a class=\"zem_slink\" title=\"PHPUnit\" rel=\"homepage\" href=\"http://www.phpunit.de\">PHPUnit</a> gave me some headaches, because ubuntu&#8217;s package managers fucked something up. Why is it I can&#8217;t install Pear if there are broken packages for something completely different? Then came the figuring out of how to actually do unit testing and I must say, it was incredibly simple. Of course I did have eight months&#8217; time for the principles grokked from Clean Code to seep in, but still.</p>\n<p>Mostly I was suprised to finally confirm that I have been doing <a class=\"zem_slink\" title=\"Test-driven development\" rel=\"wikipedia\" href=\"http://en.wikipedia.org/wiki/Test-driven_development\">test driven development</a> (TDD for you acronym junkies) for a long while. Just in reverse. Whereas now, with automated unit tests, I first write a test, then the code, I used to write the code then test the hell out of it. With PHPUnit testing has become much less of a hassle &#8211; run a command, make sure everything works. Nice!</p>\n<p>However, unit testing has one large drawback. It took me a solid six hours of coding to produce &#8230; nothing. I have in my possession now 200 lines of real code that doesn&#8217;t implement much other than making sure users exist and authenticating them, and a bunch of tests taking up a full &#8230; 170 lines of code. This is of course after some <a class=\"zem_slink\" title=\"Code refactoring\" rel=\"wikipedia\" href=\"http://en.wikipedia.org/wiki/Code_refactoring\">refactoring</a> and whatnot, the original ratio was always that there were twice as many tests as there was actual code. Yummie.</p>\n<p>Now I&#8217;m sure many of you will bash me for being such a dirty little blasphemer, but fuck it. Despite all the headaches saved with testing, despite making testing a lot simpler and quicker. It still took me SIX BLOODY HOURS to create some functionality that never used to take more than two hours to code and debug. </p>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"80f94a93-3d1f-5c3e-b51d-17bd904a6e23"}}