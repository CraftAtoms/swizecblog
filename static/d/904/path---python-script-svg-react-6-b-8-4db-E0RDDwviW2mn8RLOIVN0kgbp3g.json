{"data":{"wordpressPost":{"title":"I made a python script that converts SVG to React ?","content":"<p>I made a terrible thing Sunday night.</p>\n<p>The theme that I bought for <a href=\"https://swizec.com/blog/livecoding-26-new-page-react-indie-bundle/swizec/7211\">the new React Indie Bundle page</a> has decorations built with SVG. You slap them into the page as <code>&lt;svg&gt;</code> tags, and it makes your sections look nice.</p>\n<img class=\"alignnone size-full wp-image-7216\" src=\"https://swizec.com/blog/wp-content/uploads/2016/11/decorations.png\" width=\"589\" height=\"640\" srcset=\"https://swizec.com/blog/wp-content/uploads/2016/11/decorations.png 589w, https://swizec.com/blog/wp-content/uploads/2016/11/decorations-276x300.png 276w\" sizes=\"(max-width: 589px) 100vw, 589px\" />\n<p>You&#8217;re supposed to slap them into the page as <code>&lt;svg&gt;</code> tags. It&#8217;s great that <code>create-react-app</code> has built-in support for importing svgs, right?</p>\n<p>Well… that&#8217;s meant for images. <code>import arrow from 'decorations/arrow.svg</code> gives you a relative URL. Something like <code>public/decorations/arrow.svg</code> that you&#8217;re meant to use as a <code>src</code> prop for an image tag.</p>\n<pre lang=\"javascript\">import arrow from 'decorations/arrow.svg`\n\n// ...\nconst Arrow = () =&gt; (\n    <img src=\"{arrow}\" />\n);\n</pre>\n<p>This, of course, does not work with with the Angle theme. That one wants you to use SVG as a first-class citizen of the DOM. So what&#8217;s a guy to do? ?</p>\n<p>Well… heh… I built a python script that takes SVG and crudely turns it into a React component. This is a terrible idea, but with a lot of manual massaging, it worked. ?</p>\n<h2>Here it is:</h2>\n<pre lang=\"python\">import os\n\n# from http://stackoverflow.com/questions/4303492/how-can-i-simplify-this-conversion-from-underscore-to-camelcase-in-python\ndef dash_to_camelcase(value):\n    def camelcase():\n        yield str.lower\n        while True:\n            yield str.capitalize\n\n    c = camelcase()\n    return \"\".join(c.next()(x) if x else '-' for x in value.split(\"-\"))\n\nfor subdir, dirs, files in os.walk('./top'):\n    for file in files:\n        path = os.path.join(subdir, file)\n        name, ext = file.split('.')\n\n        with open(path, 'r') as f:\n            svg = f.read()\n\n            svg = svg.replace('&lt;svg', 'import React from \"react\"; export const %s = () =&gt; (&lt;svg' % dash_to_camelcase(name), 1) \\\n                     .replace('class=', 'className=') \\\n                     .replace('preserveaspectratio=', 'preserveAspectRatio=') \\\n                     .replace('viewbox=', 'viewBox=') \\\n                     .replace('stroke-width=', 'strokeWidth=') \\\n                     .replace('', ')')\n\n            with open(os.path.join(subdir, name+'.js'), 'w') as out:\n                out.write(svg)\n</pre>\n<p>The script traverses a directory and assumes all the files it finds are SVGs. This is the first red flag. Then it reads the SVG as text and performs some search &amp; replace operations:</p>\n<ul>\n<li><code>&lt;svg</code> becomes a React import, and an exported function declaration</li>\n<li><code>class</code>, <code>preserveaspectratio</code>, <code>viewbox</code>, and <code>stroke-width</code> are fixed to follow React&#8217;s prop naming rules</li>\n<li><code>&lt;/svg&gt;</code> gets a <code>)</code> to close the function body.</li>\n</ul>\n<p>This is red flag number 2 through 6, maybe 7. Why? Because this is terrible, and I should feel bad. You can&#8217;t parse <a href=\"http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags\">XML with Regex</a>, which this is a simplified instance of, and <em>for the love of god use a parser like lxml</em>.</p>\n<p>Several problems showed up:</p>\n<ul>\n<li>Some files had two <code>&lt;svg&gt;</code> tags. I had to manually edit them <em>every time I re-ran the script because bugs</em> ?</li>\n<li>Some files had typos in their props, like <code>stroke-width = \"</code>. This is valid XML, but my &#8220;parser&#8221; couldn&#8217;t handle it ➡ manual edits</li>\n<li>Files with two <code>&lt;svg&gt;</code>s have to be wrapped in a <code>&lt;div&gt;</code> to fulfill React&#8217;s &#8220;one child per component&#8221; policy. This needs manual edits because my &#8220;parser&#8221; knows nothing.</li>\n</ul>\n<p>2 hours after I started, I was done. Happy to have successfully turned 30 svgs into React components, I could now use the two that I needed. Excellent.</p>\n<p>Yak shaving at its finest.</p>\n<p>This could make a useful Webpack plugin, though. Import SVG as a React component? That sounds like something everybody needs ?</p>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"fa8a435a-ea18-5daa-ad31-63438a5dfb40"}}