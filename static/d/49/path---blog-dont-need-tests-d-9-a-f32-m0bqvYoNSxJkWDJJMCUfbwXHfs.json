{"data":{"wordpressPost":{"title":"You don&#8217;t need tests","content":"<img class=\"alignnone size-large wp-image-7098 aligncenter\" src=\"http://swizec.com/blog/wp-content/uploads/2016/10/photo-1461632830798-3adb3034e4c8-1024x684.jpeg\" alt=\"photo-1461632830798-3adb3034e4c8\" srcset=\"https://swizec.com/blog/wp-content/uploads/2016/10/photo-1461632830798-3adb3034e4c8-1024x684.jpeg 1024w, https://swizec.com/blog/wp-content/uploads/2016/10/photo-1461632830798-3adb3034e4c8-300x200.jpeg 300w, https://swizec.com/blog/wp-content/uploads/2016/10/photo-1461632830798-3adb3034e4c8-768x513.jpeg 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" />\n<p>Unit tests are pointless. Integration tests are hard. Clicky tests are king.</p>\n<p>You write a piece of code, and you <em>know</em> it works. You just wrote it. You just ran it. You just saw it do everything you thought to try. Any unit or integration tests would have confirmed this.</p>\n<p>Your PM gets your code and tries it out. He or she finds a bunch of things you forgot. Bits of the spec that you missed, nuances in edge cases you didn&#8217;t think of, strange things even the PM didn&#8217;t think of.</p>\n<p>The designer finds a bunch of crap that should&#8217;ve been obvious, but you&#8217;re not a designer, so you didn&#8217;t think it was obvious.</p>\n<p>You get back to your code. Any tests you would have written wouldn&#8217;t have caught any of this stuff. You didn&#8217;t think of it, so you wouldn&#8217;t have written a test. Even if you did assume you aren&#8217;t perfect and needed tests. You don&#8217;t need tests.</p>\n<p>You fix the things. You test the things. Sometimes, you test something twice because you notice fixing it broke something else. Keeping all the balls in the air is annoying, but totally doable. You don&#8217;t need tests.</p>\n<p>Your PM says ??. Your designer says gorgeous.</p>\n<p>Your QA team gets the code. You tell them which manual test cases to do. It takes them half a day, but your code is good. You don&#8217;t need tests.</p>\n<p>Your user gets your code. It breaks. They did a thing that you didn&#8217;t think to try, your PM didn&#8217;t think was related, and nobody told QA to try.</p>\n<p>Your user is nice enough to file a Usersnap report.</p>\n<p><em>&#8220;Nonsense&#8221;</em>, you say, <em>&#8220;one in a million case. I can&#8217;t reproduce that.&#8221;</em></p>\n<p>Five more users find the bug. You notice a pattern. Your PM says this is now a production issue and should be fixed immediately.</p>\n<p>You drop everything you were doing. You fix the thing. You test the thing. Sometimes you test something twice because you notice fixing it broke something else. Keeping all the balls in the air is annoying, but totally doable. You don&#8217;t need tests.</p>\n<p>Your PM says ??. You add a line item to QA&#8217;s plate. It takes them half a day to test everything. QA says ??. Your code goes to production.</p>\n<p>Your users say nothing. Quiet users are good users. You don&#8217;t need tests.</p>\n<p>Six months pass.</p>\n<p>It is time to refactor your code. You would kill for some tests.</p>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"aa1ba622-b453-5962-8c2f-c8aace6b8304"}}