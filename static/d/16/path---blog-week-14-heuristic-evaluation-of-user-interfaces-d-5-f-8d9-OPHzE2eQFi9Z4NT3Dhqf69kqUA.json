{"data":{"wordpressPost":{"title":"Week 14, heuristic evaluation of user interfaces","content":"<p><em>[This post is part of an ongoing challenge to understand 52 papers in 52 weeks. You can read previous entries, <a href=\"http://swizec.com/blog/category/52-papers-in-52-weeks\">here</a>, or subscribe to be notified of new posts by <a href=\"http://swiz.ec/52papers-list\">email</a>]</em></p>\n<p><a class=\"zem_slink\" title=\"User interface\" href=\"http://en.wikipedia.org/wiki/User_interface\" target=\"_blank\" rel=\"wikipedia\">User interfaces</a> are hard. So hard in fact that a friend of mine recently spent 45 minutes on hold with the IRS only to be told <em>&#8220;Sorry, we&#8217;re too busy. Call back later.&#8221;</em>. He never even spoke to a real person.</p>\n<p>We&#8217;ve all had to suffer through crappy user interfaces. If only there was a way for people building these things to discover potential issues <em>before</em> they hit users in the face.</p>\n<p>There are, in fact, many. But in 1990 <a class=\"zem_slink\" title=\"Jakob Nielsen (usability consultant)\" href=\"http://en.wikipedia.org/wiki/Jakob_Nielsen_%28usability_consultant%29\" target=\"_blank\" rel=\"wikipedia\">Jakob Nielsen</a> and Rolf Molich published a paper called <a href=\"https://docs.google.com/viewer?url=http%3A%2F%2Fmestrado-watinha.googlecode.com%2Fsvn%2Ftrunk%2Fhci%2Fmonografia%2FartigosUtilizados%2Frevisao%2Fp249-nielsenAvaHeu.pdf\"><em>Heuristic Evaluation of User Interfaces</em></a> that describes a cheap way of accurately finding most if not all <a class=\"zem_slink\" title=\"Usability\" href=\"http://en.wikipedia.org/wiki/Usability\" target=\"_blank\" rel=\"wikipedia\">usability</a> problems in your interface.</p>\n<h2 id=\"heuristic-evaluation\">Heuristic evaluation</h2>\n<p>Heuristic evaluation is essentially looking at the interface and forming an opinion about what&#8217;s good or bad. Ideally you&#8217;d use a set of guidelines, but there are thousands of those, so people usually rely on experience and their own intuitions.</p>\n<p>The authors have come up with a simplified list of nine heuristics:</p>\n<ul>\n<li>simple and natural dialogue</li>\n<li>speak the user&#8217;s language</li>\n<li>minimize user memory load</li>\n<li>be consistent</li>\n<li>provide feedback</li>\n<li>provide clearly marked exits</li>\n<li>provide shortcuts</li>\n<li>good error messages</li>\n<li>prevent errors</li>\n</ul>\n<p>The list came about through years of teaching and consulting on user interfaces and is particularly useful because it can be taught in a single lecture.</p>\n<h2 id=\"empirical-test-of-heuristic-evaluation\">Empirical test of heuristic evaluation</h2>\n<p>Four experiments were performed to test the applicability of heuristic evaluation in a real world scenario. All of them follow the pattern of pick an interface, define X known problems, give the design to a bunch of people to assess, see how many problems they find.</p>\n<p>Interestingly, there were times where the researchers had to add to their list of known problems because a test subject would find something they didn&#8217;t think of. This indicates that no matter your experience, it is near impossible for a single person to bump into all usability problems.</p>\n<div style=\"width: 485px\" class=\"wp-caption alignnone\"><img title=\"Summary of experiments\" alt=\"Summary of experiments\" src=\"https://draftin.com:443/images/8250?token=6_QpbklIrJfJ4-GKOJiTTmhp2KRzDy9CJOUbuFjZwwjJdtyeCBlMAVQ3MVuVsiTFiIqmiXnyPzY9RE3uRSHPCRo\" width=\"475\" height=\"240\" /><p class=\"wp-caption-text\">Summary of experiments</p></div>\n<p>&nbsp;</p>\n<p>The first experiment included ten screen dumps from a Danish videotext system, <strong>teledata</strong>, and was evaluated by 37 computer science students looking for a total of 52 known usability problems.</p>\n<p>For the second test they designed <strong>Mantel</strong>. It was a design for a small information system working as a phone number directory accessible with a modem. Evaluators were readers of the Danish Computerworld magazine and only had access to a written specification. They were looking for 30 usability issues.</p>\n<p>The third and fourth experiments used live systems instead of just designs. Once more the evaluators were students and their job was to look for problems in the voice response systems for <strong>Savings</strong> and <strong>Transport</strong>. Call with a phone, use a 12-key keypad to send tones at key moments. Easy.</p>\n<p>While there was no overlap between subjects in the first two tests, they used the same evaluators with a similar background in usability (taking the authors&#8217; course) for both the third and fourth experiment. This allowed them to perform a comparison of evaluators.</p>\n<p>Not sure if this was intentional, but the authors picked the worst type of systems. When I was a kid I <em>hated</em> the videotext system on our telly, extremely difficult to navigate, but the closest thing we had to the internet. And I still hate the whole <em>&#8220;Press 1 to fuck off. Press 2 for information, maybe.&#8221;</em></p>\n<p>Why do we still have those?</p>\n<h2 id=\"the-usability-problems\">The usability problems</h2>\n<p>Some of the usability problems found include inconsistencies in how commands work with the dial-in systems. One used an end-of-command key, the other used that same key for &#8220;return to main menu&#8221;. Weird considering they both use the same equipment.</p>\n<p>95% of the subjects also found it problematic that Mantel overwrites a user&#8217;s phone-number instantly and 62% found it odd that the Transport system goes from main-menus to submenus without much indication this happened.</p>\n<p>The exact problems don&#8217;t matter as much as deciding whether they are actually valid. Is this something that a normal user would notice and struggle with?</p>\n<p>It seems that given enough evaluators, especially if some of them are not trained, you should be able to mostly find problems that affect real people. The same problem discovered by multiple people is likely far more serious than something that only bugs a single person.</p>\n<p>But you should keep in mind that it is impossible to find all problems for all occasions. Real users might use a system for different purposes and will hit different problems depending on what they&#8217;re trying to achieve.</p>\n<p>There is also a subset of users that will always struggle with your interface no matter what you do or how easy you make it. Just as there is a subset who will figure everything out as if by magic.</p>\n<p>You can often notice this when a computer savvy person helps when something doesn&#8217;t work. They touch the computer and everything acts exactly like it&#8217;s supposed to, despite protestations that the exact same thing has been tried multiple times and never worked.</p>\n<p>But let&#8217;s not get into the whole <em>&#8220;Friends don&#8217;t let friends do tech support&#8221;</em></p>\n<h2 id=\"evaluation-results\">Evaluation results</h2>\n<div style=\"width: 742px\" class=\"wp-caption alignnone\"><img title=\"Proportion of problems discovered\" alt=\"Proportion of problems discovered\" src=\"https://draftin.com:443/images/8252?token=OrIEul50kZHe1QSFXQcGVxE2mV6zph8eNw7Fz_MYsXaML2MA0C49XPl18mu4w5wIrPXPVrUlYOPPb6Ad1mrQJxY\" width=\"732\" height=\"274\" /><p class=\"wp-caption-text\">Proportion of problems discovered</p></div>\n<p>&nbsp;</p>\n<p>The main result is that heuristic evaluation is hard. Even in the best case, evaluators barely found more than half of the problems.</p>\n<p>But that&#8217;s not too bad. Finding <em>some</em> problems is better than <em>no</em> problems, and you have to keep in mind not all evaluators will find the same set of problems. Group problem discovery rates might actually be higher.</p>\n<p>If you look at a table of individual differences in evaluator&#8217;s ability to find problems, you&#8217;ll see that variability is very high. The worst evaluator of Mantel found no problems, while the best found 63%, and the best evaluator over all found 74% of the problems in Teledata.</p>\n<div style=\"width: 767px\" class=\"wp-caption alignnone\"><img title=\"Individual differences in ability\" alt=\"Individual differences in ability\" src=\"https://draftin.com:443/images/8253?token=_68QGPJEJ_jRQAJckOK-9rhpo2npwenPkrxCC8IoAczi3ky4a7aMLnV2IK1JXI1hx8YOLGSekFmW1ndWPurra5U\" width=\"757\" height=\"148\" /><p class=\"wp-caption-text\">Individual differences in ability</p></div>\n<p>&nbsp;</p>\n<p>The table also shows that some systems might be easier to evaluate heuristically than others, but you can always augment heuristics with more rigorous engineering methods.</p>\n<h2 id=\"aggregated-evaluations\">Aggregated evaluations</h2>\n<p>Looking at these results, it makes sense to aggregate evaluation results. This eliminates most false positives &#8211; usually found by a single person &#8211; and will take into account that even bad evaluators sometimes find hard problems missed by a better evaluator.</p>\n<p>One issue with finding usability problems is that once pointed out, they become obvious to everyone. Discovering them first is the hard part.</p>\n<p>The researchers created multiple aggregate evaluations for each experiment by choosing a number of people at random. They discovered a rapid increase of discovered problems up to about 5 evaluators and diminishing returns after more than 10.</p>\n<div style=\"width: 710px\" class=\"wp-caption alignnone\"><img title=\"Proportion of usability problems found\" alt=\"Proportion of usability problems found\" src=\"https://draftin.com:443/images/8254?token=NWtOOTGaPp4Ho1riX-YjZqTgoHaeAahOy_JCPExujlaDgy4HoGFRvo35P-Vvdsun7fGrpoxVWuDQvyvV9k2Y9eM\" width=\"700\" height=\"419\" /><p class=\"wp-caption-text\">Proportion of usability problems found</p></div>\n<p>&nbsp;</p>\n<p>This suggests that your best bet for finding <em>most</em> usability problems is getting a group of seven or so people and asking them to look for problems. Much more than and you&#8217;re wasting time and money. Less than five and you&#8217;re missing a lot.</p>\n<p>You are also likely to find more problems if evaluators conduct their evaluation in private lest they influence each other.</p>\n<h2 id=\"fin\">Fin</h2>\n<p>The authors conclude their study by saying that heuristic evaluation is hard, but presents a cheap way of finding problems. Especially when you can get multiple evaluators and aggregate their results.</p>\n<p>Major advantages are: &#8211; cheap &#8211; intuitive and easy to motivate people to do &#8211; no advance planning needed &#8211; can be used early in the process</p>\n<p>Really it seems the only disadvantage might be that sometimes problems are found without any suggestions for a fix. But that&#8217;s what your UX guy is for 😉</p>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/?px\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" alt=\"Enhanced by Zemanta\" src=\"http://img.zemanta.com/zemified_e.png?x-id=0f82c821-0d44-4a60-8104-0025d8f158c6\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"8ac28880-5bde-5803-95a4-0d5f34721ede"}}