{"data":{"wordpressPost":{"title":"My love letter to Prettier","content":"<p>I&#8217;ve been using <a href=\"https://github.com/prettier/prettier\">Prettier</a> for a month. How did I ever live without it?</p>\n<p>If you haven&#8217;t heard, Prettier is an opinionated code formatter. That tells you everything and nothing about how great it is and why you might use it.</p>\n<p>Here&#8217;s a gif instead üëá</p>\n<img class=\"alignnone size-full wp-image-7908\" src=\"https://swizec.com/blog/wp-content/uploads/2017/11/prettier-magic.gif\" width=\"630\" height=\"249\" />\n<p>You write some nasty code, press save, and Prettier makes it look good.</p>\n<p>That might not look like much, but it changed my life. You never realize how much time you&#8217;re wasting on formatting code until a machine starts doing it for you.</p>\n<p>I wish I knew how to measure the difference.</p>\n<p>One thing I do know is that it&#8217;s a big enough difference that when I ran an <a href=\"https://swizec.com/blog/teaching-stubhub-react-redux/swizec/7860\">Intro to React and Redux workshop</a> with and without Prettier, people found it easier to follow when I had Prettier. You could <em>feel</em> that they were paying more attention.</p>\n<p>Part of the reason is that my code was no longer idiosyncratic. Not in formatting, at least. There are always going to be <em>some</em> idiosyncrasies, but Prettier resolves most of the stuff that usually trips you up when reading code.</p>\n<p>Using parentheses around single argument fat arrow functions, <code>(a) =&gt; b</code> or <code>a =&gt; b</code>? Who cares? Prettier fixes it.</p>\n<p>Self-closing JSX tags or not? <em>shrug</em>. Prettier.</p>\n<p>Splitting long argument lists into many lines or one long line or just a few lines? Don&#8217;t know. Prettier will do it.</p>\n<p>The amount of decisions you&#8217;ll never have to make again. You&#8217;ll never have to worry about in code-review. You&#8217;ll never have to debate and discuss for hours on end‚Ä¶ it&#8217;s amazing. I mean look at this!</p>\n<img class=\"alignnone size-full wp-image-7905\" src=\"https://swizec.com/blog/wp-content/uploads/2017/11/prettier-magic-2.gif\" width=\"630\" height=\"249\" />\n<p>Shitty code. Good code.</p>\n<p>My favorite part is never pressing enter ever again. I just type and type and type, then save and voila.</p>\n<h2>How to introduce Prettier at work</h2>\n<p><em>&#8220;Ah but, Swizec, I have a big old codebase! We can&#8217;t start using this now, can we?&#8221;</em></p>\n<p>Yes, you can!</p>\n<p>Here&#8217;s how you do it. At least how I did it at the J.O.B after using it for 1 day at home. My mind went like this <em>&#8220;OMG this is awesome! I&#8217;m setting this up for everyone tomorrow!&#8221;</em>.</p>\n<p>And so I did. For a codebase that&#8217;s been growing since before ES6 came out. Yes, that old.</p>\n<p><strong>1.</strong> Set up a git commit hook. <a href=\"https://prettier.io/docs/en/precommit.html\">There are instructions in the Docs</a>. I used the <code>lint-staged</code> option because it required the least setup.</p>\n<p><strong>2.</strong> Set up your <code>.prettierrc</code>. I like to set <code>tabWidth: 4</code> and <code>printWidth: 80</code>. This ensures everyone&#8217;s Prettier will follow the same rules.</p>\n<p><strong>3.</strong> You run Prettier on all your files. For us, that looked like this: <code>prettier app/assets/**/*.js --write</code>. You&#8217;ll have to change it based on where your code lives</p>\n<p><strong>4.</strong> Submit a PR and pray it gets merged soon because anything else that gets merged before it will introduce conflicts.</p>\n<p><strong>5.</strong> Deal with small annoyances until everybody&#8217;s feature branches catch up and start using Prettier.</p>\n<p>Congratulations! Your team will never again have to debate whether to use double or single quotes!</p>\n<img class=\"alignnone size-full wp-image-7906\" src=\"https://swizec.com/blog/wp-content/uploads/2017/11/Pokemon-celebrate.gif\" width=\"500\" height=\"280\" />\n<p>Oh and no, Prettier won&#8217;t introduce any bugs. It&#8217;s been battle tested, and you should be fine. Might want to run a quick smoke test before deploying to production though ‚ò∫Ô∏è</p>\n<p>You might find some of your old code funny to look at. All modern and styled and beautiful, yet somehow odd. Odd because it doesn&#8217;t use all the ES6 things you use today, but looks just like you wrote it yesterday.</p>\n<img class=\"alignnone size-full wp-image-7907\" src=\"https://swizec.com/blog/wp-content/uploads/2017/11/new-fav-prettier.gif\" width=\"630\" height=\"249\" />\n<h2>Things I wish Prettier could do, but can&#8217;t (yet?)</h2>\n<p>As lazy as I&#8217;ve become with Prettier, I want to grow even lazier. I want to be able to write not just sloppy code, but <em>terribly</em> sloppy code and have Prettier fix it.</p>\n<p>For example, right now when I write <code>\"string'</code> (mismatched quotes), Prettier complains about a syntax error. What if it fixed the syntax error instead?</p>\n<p>Or when I get sloppy with closing my parens in a long function chain, what if Prettier could fix it instead of complaining?</p>\n<pre><code>export default withRouter(\nconnect(state =&gt; ({\nitems: state.shoppingCart.items\n}))(ShoppingCart)\n);\n</code></pre>\n<p>See all those little parens that have to be just right? Wouldn&#8217;t it be great if Prettier could just figure it out for us and close them as necessary? üòõ</p>\n<p>Quote and paren matching isn&#8217;t <em>that</em> difficult to implement. I remember learning about it in a compilers course in college.</p>\n<p>It increases complexity by a lot because you have to keep track of context, but it&#8217;s doable. A potentially bigger problem is that it might be hard to guess what you want as a user. Are you trying to close everything? Just one expression? <em>shrug</em></p>\n<p>But maybe I&#8217;m the only person who wants this because everybody else uses their editor to automatically close parens as soon as they type. You know, the part where <code>(</code> autocompletes to <code>()</code>. That removes any need for this feature ü§î</p>\n<p>Automatic quote matching tho, I want it.</p>\n<p><strong>PS:</strong> I now want Prettier for all the languages I use. Indenting Ruby is just such a pain. üòá</p>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"53c10e26-8650-505c-b825-81dd4ed77981"}}