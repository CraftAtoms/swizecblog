{"data":{"wordpressPost":{"title":"I learned two things today 19.8.","content":"<div id=\"attachment_2264\" style=\"width: 310px\" class=\"wp-caption alignright\"><a href=\"http://swizec.com/blog/wp-content/uploads/2011/08/photo1.jpg\"><img class=\"size-medium wp-image-2264\" title=\"It's an Android!\" src=\"http://swizec.com/blog/wp-content/uploads/2011/08/photo1-300x224.jpg\" alt=\"\" width=\"300\" height=\"224\" srcset=\"https://swizec.com/blog/wp-content/uploads/2011/08/photo1-300x224.jpg 300w, https://swizec.com/blog/wp-content/uploads/2011/08/photo1.jpg 640w\" sizes=\"(max-width: 300px) 100vw, 300px\" /></a><p class=\"wp-caption-text\">It&#39;s an Android!</p></div>\n<p>Today I learned that the Google Store isn&#8217;t publicly accessible. Didn&#8217;t expect this at all, but I&#8217;m glad I know someone from Google and could buy some crap I don&#8217;t actually need anyway. But those plushies are so fucking fluffy I&#8217;m gonna die! (that was a reference by the way, did you catch it?)</p>\n<p>Another thing I learned is that I have zero knowledge about how memory management works in node.js. Had a process misbehaving today that looked like there was a huge memory leak. The damn thing was wasting something like 400 megs of RAM without doing anything.</p>\n<p>Started exploring and trying to figure out what could be leaking &#8230; voila, boom, memory use drops to normal levels. I even tried some experiments that I was certain would produce memory leaks (leaving references to scopes inside closures and so on) and nothing I tried wanted to produce a memory leak.</p>\n<p>And no matter what I tried the server process just wouldn&#8217;t do anything stupid again. I should look into this more.</p>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"6c972fbc-80f7-5065-97d1-4a8728ad1ada"}}