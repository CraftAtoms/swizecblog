{"data":{"wordpressPost":{"title":"Heroku, mongo, node.js &#8211; a problem","content":"<p>A couple facts about three cool technologies</p>\n<div style=\"width: 310px\" class=\"wp-caption alignright\"><a href=\"http://en.wikipedia.org/wiki/File:The_Hunt_of_the_Unicorn_Tapestry_7.jpg\"><img class=\"zemanta-img-inserted zemanta-img-configured\" title=\"The Unicorn Is Penned, Unicorn Tapestries, c. ...\" src=\"http://swizec.com/blog/wp-content/uploads/2012/01/300px-The_Hunt_of_the_Unicorn_Tapestry_71.jpg\" alt=\"The Unicorn Is Penned, Unicorn Tapestries, c. ...\" width=\"300\" height=\"445\" /></a><p class=\"wp-caption-text\">Image via Wikipedia</p></div>\n<div class=\"mceTemp\"></div>\n<ul>\n<li><a class=\"zem_slink\" title=\"Node.js\" href=\"http://nodejs.org/\" rel=\"homepage\">node.js</a> is a powerful way of writing backend code in <a class=\"zem_slink\" title=\"JavaScript\" href=\"http://en.wikipedia.org/wiki/JavaScript\" rel=\"wikipedia\">JavaScript</a>; why JavaScript? Because you have the kind of problem that benefits from asynchronous code (the average web app) and you like using the same  brain for backend and frontend work</li>\n<li><a class=\"zem_slink\" title=\"MongoDB\" href=\"http://www.mongodb.org/\" rel=\"homepage\">mongoDB</a> is an awesome <a class=\"zem_slink\" title=\"NoSQL\" href=\"http://en.wikipedia.org/wiki/NoSQL\" rel=\"wikipedia\">NoSQL</a> data store for objects. It is an especially great companion to JavaScript since its internal storage are <a class=\"zem_slink\" title=\"JSON\" href=\"http://json.org/\" rel=\"homepage\">JSON</a>-objects. JSON has plays particularly well with JavaScript due to certain similarities (some even think the JSON language is a subset of JavaScript, <a title=\"JSON: The JavaScript subset that isn't\" href=\"http://timelessrepo.com/json-isnt-a-javascript-subset\" target=\"_blank\">although it&#8217;s not</a>)</li>\n<li><a class=\"zem_slink\" title=\"Heroku\" href=\"http://www.heroku.com/\" rel=\"homepage\">Heroku</a> is the simplest way to deploy web apps. Originally designed for Ruby, it gained node.js support last spring/summer. There are <a href=\"http://www.joyent.com/\" target=\"_blank\">alternatives</a>, but heroku presents itself as a particularly good pick for various reasons (it <em>feels</em> right)</li>\n</ul>\n<p>Combining these three technologies should be a walk in the park. <a class=\"zem_slink\" title=\"Sliced bread\" href=\"http://en.wikipedia.org/wiki/Sliced_bread\" rel=\"wikipedia\">The best thing since sliced bread</a> and unicorn farts should rain down the heavens upon you for even thinking of using node.js, mongo and heroku in unison.</p>\n<h2>Not so much.</h2>\n<div class=\"mceTemp\"></div>\n<p>The culprit &#8211; the bleeding edge, baby!</p>\n<p>Mongo&#8217;s only been widely-ish popular for a year, node.js still isn&#8217;t widely and Heroku is traditionally a <a class=\"zem_slink\" title=\"Ruby on Rails\" href=\"http://rubyonrails.org\" rel=\"homepage\">RoR</a> hosting environment so there are things that aren&#8217;t quite smooth yet.</p>\n<p>Getting mongoDB support on Heroku means using an external party &#8211; what heroku calls an add-on &#8211; <a href=\"https://mongohq.com/home\" target=\"_blank\">MongoHQ</a>. It&#8217;s a mongoDB hosting provider that gives you access to a database and lets you loose.</p>\n<p>But MongoHQ requires authentication.</p>\n<p>My favourite mongoDB driver for node.js &#8230; doesn&#8217;t support authentication. At least it doesn&#8217;t support authentication easily, in fact it doesn&#8217;t support authentication so much that it isn&#8217;t officially documented. The only reference to getting this working is <a href=\"http://j-query.blogspot.com/2011/04/mongohq-and-node.html\" target=\"_blank\">some guy&#8217;s blogpost from April 2011</a>. This is an actively developed library by the way, the last commit to <a href=\"https://github.com/christkv/node-mongodb-native\" target=\"_blank\">node-mongodb-native</a>&#8216;s github was yesterday.</p>\n<p>Some say I should be using <a href=\"https://github.com/LearnBoost/mongoose\" target=\"_blank\">mongoose</a> instead, but that would most likely require rewriting the whole application at this point. Not to mention I don&#8217;t like mongoose&#8217;s <a class=\"zem_slink\" title=\"Object-relational mapping\" href=\"http://en.wikipedia.org/wiki/Object-relational_mapping\" rel=\"wikipedia\">ORM</a>-like approach because that&#8217;s just a little too <a class=\"zem_slink\" title=\"SQL\" href=\"http://www.iso.org/iso/catalogue_detail.htm?csnumber=45498\" rel=\"homepage\">SQL</a> for my liking. Why would you force a traditional data store way of doing things onto something as refreshing as Mongo?</p>\n<p>To make things worse, a while ago (about a year it seems), mongo introduced a new <a href=\"http://www.mongodb.org/display/DOCS/Connections\" target=\"_blank\">mongo:// url schema</a> for connecting to their database &#8230; not even all the official drivers support it yet.</p>\n<p>Don&#8217;t you just love the bleeding edge? Competing libraries, standards shifting under your feet and things never quite working out!</p>\n<h6 class=\"zemanta-related-title\" style=\"font-size: 1em;\">Related articles</h6>\n<ul class=\"zemanta-article-ul\">\n<li class=\"zemanta-article-ul-li\"><a href=\"http://r.zemanta.com/?u=http%3A//www.infoworld.com/d/application-development/nodejs-inventor-extends-javascript-programming-beyond-browsers-184963&amp;a=72148407&amp;rid=0ba152c5-e257-4f06-a4aa-d8c62e2e08c5&amp;e=0cb31b66c2e367c75b2971631959db44\">Node.js inventor extends JavaScript programming beyond browsers</a> (infoworld.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://www.lukew.com/ff/entry.asp?1482\">The Four Horsemen of JavaScript</a> (lukew.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://nodemanual.org/latest/\">A community-driven manual for Node.js</a> (nodemanual.org)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://nosql.mypopescu.com/post/14453905385/attacking-nosql-and-node-js-server-side-javascript\">Attacking NoSQL and Node.js: Server-Side JavaScript Injection (SSJS)</a> (nosql.mypopescu.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/8904409/running-node-js-on-a-port-other-than-port-80\">Running node.js on a port other than port 80</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://joyeur.com/2012/01/23/cloud9s-plans-for-node-js-community/\">Cloud9′s Plans for Node.js Community</a> (joyeur.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://hacks.mozilla.org/2012/01/javascript-on-the-server-growing-the-node-js-community/\">JavaScript on the server: Growing the Node.js Community</a> (hacks.mozilla.org)</li>\n</ul>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=0ba152c5-e257-4f06-a4aa-d8c62e2e08c5\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"dfa20361-c58d-5c08-8e53-8f6ca4bcfea1"}}