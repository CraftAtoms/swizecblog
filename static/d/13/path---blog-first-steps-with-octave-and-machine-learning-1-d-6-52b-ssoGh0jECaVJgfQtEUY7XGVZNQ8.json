{"data":{"wordpressPost":{"title":"First steps with Octave and machine learning","content":"<p>You know how most programmers find functional coding to be ever so slightly mind bending and how it&#8217;s somewhat difficult to wrap one&#8217;s head around working with variables whose state you cannot change and lazy evaluations and all manner of odd things?</p>\n<div style=\"width: 310px\" class=\"wp-caption alignright\"><a href=\"http://commons.wikipedia.org/wiki/File:Gradient_ascent_%28surface%29.png\"><img class=\"zemanta-img-inserted zemanta-img-configured\" title=\"The gradient descent algorithm in action. (2: ...\" src=\"http://swizec.com/blog/wp-content/uploads/2011/11/300px-Gradient_ascent_%28surface%29.png\" alt=\"The gradient descent algorithm in action. (2: ...\" width=\"300\" height=\"246\" /></a><p class=\"wp-caption-text\">Image via Wikipedia</p></div>\n<p>The thing I&#8217;ve had most trouble with and still do actually, is coding in a functionally clean manner, using more recursion, cleaner abstractions and so on. Just as I thought I was almost starting to get kind of good at this, a bunch of people proved me wrong when I <a title=\"Crowdsourcing elegance\" href=\"http://swizec.com/blog/crowdsourcing-elegance/swizec/2608\">crowdsourced some elegance</a>.</p>\n<p>Yeah, some people are <em>really</em>Â good at this functional stuff.</p>\n<p>And then one day ml-class introduced me to <a class=\"zem_slink\" title=\"Optimization (mathematics)\" href=\"http://en.wikipedia.org/wiki/Optimization_%28mathematics%29\" rel=\"wikipedia\">mathematical programming</a> with Octave. Sure, I&#8217;ve done some Octave before at school, but that was just enough to get my feet wet &#8211; basic syntax and stuff. Or maybe I just paying enough attention to really grasp the awesome things I was being shown.</p>\n<p>Either way, I feel as if over the past two weeks, doing <a class=\"zem_slink\" title=\"Machine learning\" href=\"http://en.wikipedia.org/wiki/Machine_learning\" rel=\"wikipedia\">machine learning</a> homework in Octave has opened a whole new world of striving for elegance and purity in my code. If I thought functional was mindbending, this stuff is <em>ripping my face off</em>.</p>\n<p>Apparently when you take a naive loop and make it into something beautiful it&#8217;s called vectorization in this field. The interesting bit here is that all you really need to perform optimization of epic proportions is some math fu, no translating the problem into something else, no looking at it from five different perspectives &#8230; just maths and then some.</p>\n<p>Using the <a class=\"zem_slink\" title=\"Gradient descent\" href=\"http://en.wikipedia.org/wiki/Gradient_descent\" rel=\"wikipedia\">gradient descent</a> algorithm for <a class=\"zem_slink\" title=\"Logistic regression\" href=\"http://en.wikipedia.org/wiki/Logistic_regression\" rel=\"wikipedia\">logistic regression</a> as an example, in particular calculating the cost function:</p>\n<div id=\"attachment_2867\" style=\"width: 657px\" class=\"wp-caption alignnone\"><a href=\"http://swizec.com/blog/wp-content/uploads/2011/11/Screen-Shot-2011-11-04-at-12.32.27-PM.png\"><img class=\"size-full wp-image-2867 \" title=\"Professor Ng explaining the cost function\" src=\"http://swizec.com/blog/wp-content/uploads/2011/11/Screen-Shot-2011-11-04-at-12.32.27-PM.png\" alt=\"\" width=\"647\" height=\"256\" srcset=\"https://swizec.com/blog/wp-content/uploads/2011/11/Screen-Shot-2011-11-04-at-12.32.27-PM.png 924w, https://swizec.com/blog/wp-content/uploads/2011/11/Screen-Shot-2011-11-04-at-12.32.27-PM-300x118.png 300w\" sizes=\"(max-width: 647px) 100vw, 647px\" /></a><p class=\"wp-caption-text\">Professor Ng explaining the cost function</p></div>\n<p>Although I think this might have been exactly the perfect example for the code below &#8230; it&#8217;s difficult to search through videos for this stuff.</p>\n<p>The naive approach could be something like this (didn&#8217;t actually run the code):</p>\n<pre lang=\"octave\">J = 0;\r\nfor i = 1:m\r\n  J += =y(i)*log(sigmoid(theta*X(i,:))-(1-y(i)*log(1-sigmoid(theta*X(i,:));\r\nend\r\n\r\nJ = J/m;\r\n\r\nfor j = 1:size(theta)\r\n   grad(j) = 0;\r\n   for i = 1:m\r\n      grad(j) += (sigmoid(theta*X(i,:))-y(i))*X(i,j);\r\n   end\r\n   grad(j) = grad(j)/m;\r\nend</pre>\n<p>But all those lops aren&#8217;t really necessary, all they are basically doing is <a class=\"zem_slink\" title=\"Matrix multiplication\" href=\"http://en.wikipedia.org/wiki/Matrix_multiplication\" rel=\"wikipedia\">matrix multiplication</a>, which gives us a nice way to vectorize the whole thing:</p>\n<pre lang=\"octave\">J = (1/m)*sum(-y'*log(sigmoid(X*theta))-(1-y')*log(1-sigmoid(X*theta)));\r\n\r\ngrad = (1/m)*(sigmoid(X*theta)-y)'*X;</pre>\n<p>The difference in elegance absolutely blows my mind and I can&#8217;t wait to see what other wonders I discover through this Octave thing in the course of this semester.</p>\n<p>Pretty much all my octave can be found in the <a href=\"https://github.com/Swizec/ml-class-homework\" target=\"_blank\">ml-class-homework repository</a>. But I&#8217;m sure I&#8217;ll end up modeling more algorithms in this thing.</p>\n<h6 class=\"zemanta-related-title\" style=\"font-size: 1em;\">Related articles</h6>\n<ul class=\"zemanta-article-ul\">\n<li class=\"zemanta-article-ul-li\"><a href=\"http://flowingmotion.jojordan.org/2011/10/16/12-steps-to-running-gradient-descent-in-octave/\">12 steps to running gradient descent in Octave</a> (flowingmotion.jojordan.org)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://www.r-bloggers.com/machine-learning-ex4-%e2%80%93-logistic-regression/\">Machine Learning Ex4 &#8211; Logistic Regression</a> (r-bloggers.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://www.r-bloggers.com/machine-learning-ex-5-2-%e2%80%93-regularized-logistic-regression/\">Machine Learning Ex 5.2 &#8211; Regularized Logistic Regression</a> (r-bloggers.com)</li>\n</ul>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=821e177f-151f-4e6b-9a26-30e7b37cf580\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"eddef6af-dce5-50da-ae93-24ab6f37bc6a"}}