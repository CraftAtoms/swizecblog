{"data":{"wordpressPost":{"title":"The commonest javascript bug","content":"<div style=\"width: 250px\" class=\"wp-caption alignright\"><a href=\"http://www.flickr.com/photos/69145729@N00/2921731384\"><img class=\"zemanta-img-inserted zemanta-img-configured\" title=\"CAEN 25th Anniversary Celebration\" src=\"http://swizec.com/blog/wp-content/uploads/2012/02/2921731384_72ed2e98da_m5.jpg\" alt=\"CAEN 25th Anniversary Celebration\" width=\"240\" height=\"180\" /></a><p class=\"wp-caption-text\">CAEN 25th Anniversary Celebration (Photo credit: rosefirerising)</p></div>\n<p>Every couple of weeks somebody will come running to me: <em>&#8220;Swizec, Swizec, I did everything right, but this <a class=\"zem_slink\" title=\"JavaScript\" href=\"http://en.wikipedia.org/wiki/JavaScript\" rel=\"wikipedia\">javascript</a> isn&#8217;t doing what it&#8217;s supposed to! Whatever I <a class=\"zem_slink\" title=\"Event (computing)\" href=\"http://en.wikipedia.org/wiki/Event_%28computing%29\" rel=\"wikipedia\">click</a> only the last item works. Halp!&#8221;</em></p>\n<p>Every time it&#8217;s the same bug &#8211; people just don&#8217;t understand how loops and <a class=\"zem_slink\" title=\"Closure (computer science)\" href=\"http://en.wikipedia.org/wiki/Closure_%28computer_science%29\" rel=\"wikipedia\">closures</a> play together in javascript. Invariably they <a class=\"zem_slink\" title=\"Control flow\" href=\"http://en.wikipedia.org/wiki/Control_flow\" rel=\"wikipedia\">loop</a> through an array, attach the index to an event, then get frustrated when, upon triggering the event, that particular variable seems to have the wrong value.</p>\n<p>The code usually looks something like this:</p>\n<pre lang=\"javascript\">json = JSON.parse(this.responseText);\r\nfor (i = 0; i < json.links.length; i++) {\r\n       params = json.links[i];\r\n\r\n       row = $$.ui.createRow({\r\n                 // use params for settings, it works\r\n                 click: function () {\r\n                    var modalBrowser = new MiniBrowser({\r\n                                        // it all breaks down here\r\n                                        url: params.url,\r\n                    });\r\n       });\r\n       // do some other stuff\r\n}</pre>\n<p>Can you spot the problem?</p>\n<p>On the first use of <em>params</em> everything is happy, using the <a class=\"zem_slink\" title=\"Local variable\" href=\"http://en.wikipedia.org/wiki/Local_variable\" rel=\"wikipedia\">local variable</a>, which is updated on every loop iteration. But when that <em>click</em> event is triggered it <strong>still</strong> uses the local params variable ... that was updated on every loop iteration.</p>\n<p>By now, the loop has long since completed and that variable holds the last value - causing a weird-looking bug that is difficult for newbies to fix because, hey, why should I know about how pointers work? This is a <a class=\"zem_slink\" title=\"Scripting language\" href=\"http://en.wikipedia.org/wiki/Scripting_language\" rel=\"wikipedia\">scripting language</a> damn it!</p>\n<p>Luckily the fix is very simple:</p>\n<pre lang=\"javascript\">json = JSON.parse(this.responseText);\r\njson.links.map(function (params) {\r\n\r\n       row = $$.ui.createRow({\r\n               // use params for settings, it works\r\n               click: function () {\r\n                    var modalBrowser = new MiniBrowser({\r\n                                   // it magically still works here\r\n                                   url: params.url,\r\n                    });\r\n       });\r\n       // do some other stuff\r\n});</pre>\n<p>Just change the for loop to a map and you don't even have to fix anything else. Everything works as usual, except now all the code is wrapped up in a closure and caries a reference to the whole <a class=\"zem_slink\" title=\"Scope (computer science)\" href=\"http://en.wikipedia.org/wiki/Scope_%28computer_science%29\" rel=\"wikipedia\">variable scope</a> around. Simply put - when the click event is triggered all the variables that were known when it was set are still there, with exactly the same values.</p>\n<p>Generally speaking, even a modest understanding of closures (like I have) will make it <em>much</em> easier to write javascript. Might even help you fix a memory leak or fifty.</p>\n<h6 class=\"zemanta-related-title\" style=\"font-size: 1em;\">Related articles</h6>\n<ul class=\"zemanta-article-ul\">\n<li class=\"zemanta-article-ul-li\"><a href=\"http://swizec.com/blog/fun-javascript-feature/swizec/3141\">Fun javascript feature</a> (swizec.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/9426655/how-to-disable-javascript-redirect-on-click-event\">How to disable Javascript redirect on click event</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/9425775/dynamic-closure-functions-for-a-multiplication-game-in-javascript\">dynamic closure functions for a multiplication game in javascript</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://css.dzone.com/articles/major-and-minor-javascript\">Major and Minor JavaScript Pitfalls and ECMAScript 6</a> (css.dzone.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/9245484/pass-php-variable-from-while-loop-to-javascript-function\">Pass PHP variable from while loop to javascript function</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://lostechies.com/derekgreer/2012/02/17/javascript-closures-explained/\">JavaScript Closures Explained</a> (lostechies.com)</li>\n</ul>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=41f7ec3d-4d57-4679-9c01-21f8627cc5bc\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"5a607407-9a9d-51a5-a5bb-84acb0c836c6"}}