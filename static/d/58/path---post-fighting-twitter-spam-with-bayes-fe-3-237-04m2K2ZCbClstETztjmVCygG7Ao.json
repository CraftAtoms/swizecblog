{"data":{"wordpressPost":{"title":"Fighting Twitter spam with bayes","content":"<div class=\"zemanta-img\" style=\"display: block; width: 250px; margin: 1em; float: right;\">\n<div>\n<dl class=\"wp-caption alignright\" style=\"width: 250px;\">\n<dt class=\"wp-caption-dt\"><a href=\"http://www.flickr.com/photos/27518426@N03/3874225648/\"><img title=\"August Sky.\" src=\"http://farm4.static.flickr.com/3429/3874225648_6b2766c4a1_m.jpg\" alt=\"August Sky.\" /></a></dt>\n<dd class=\"wp-caption-dd zemanta-img-attribution\" style=\"font-size: 0.8em;\">Image by <a href=\"http://www.flickr.com/photos/27518426@N03/3874225648/\">pdeee454</a> via Flickr</dd>\n</dl>\n</div>\n</div>\n<p>For a few days now I&#8217;ve been researching the nature of <a class=\"zem_slink\" title=\"Spam (electronic)\" rel=\"wikipedia\" href=\"http://en.wikipedia.org/wiki/Spam_%28electronic%29\">spam</a> on <a class=\"zem_slink\" title=\"Twitter\" rel=\"wikipedia\" href=\"http://en.wikipedia.org/wiki/Twitter\">Twitter</a> and finding the best way of combating it for a tool I&#8217;m making. It&#8217;s been an extremely interesting ride that has, surprise surprise, proven my initial assumptions made several months ago in the process of creating a different tool.</p>\n<p>When I started looking into <a class=\"zem_slink\" title=\"SpamBayes\" rel=\"wikipedia\" href=\"http://en.wikipedia.org/wiki/SpamBayes\">spambayes</a> last week I realised a set of verified spam and <a class=\"zem_slink\" title=\"Ham\" rel=\"wikipedia\" href=\"http://en.wikipedia.org/wiki/Ham\">ham</a> was needed to train the filters so they could do their work. So I made myself a tool that would present everything from the public timeline (20 tweets) and set out to clicking</p>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"af77d1ac-10e5-59ff-9f56-df37923d7698"}}