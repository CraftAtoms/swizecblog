{"data":{"wordpressPost":{"title":"Benchmarking Vue","content":"<p><em>This is a Livecoding Recap â€“ an almost-weekly post about interesting things discovered while livecoding. Usually shorter than 500 words. Often with pictures. Livecoding happens almost <strong>every Sunday at 2pm PDT</strong> on multiple channels. You should subscribe to <a href=\"https://www.youtube.com/user/TheSwizec\">My Youtube</a> channel to catch me live.</em></p>\n<p><iframe width=\"580\" height=\"326\" src=\"https://www.youtube.com/embed/Ff5NiCzP0ek?feature=oembed\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe></p>\n<p><em>This article builds on my previous articles about <a href=\"https://swizec.com/blog/building-interactive-dom-benchmark-preliminary-results/swizec/8219\">Building an interactive DOM benchmark</a> and <a href=\"https://swizec.com/blog/seamlessly-render-preact-component-react-project/swizec/8224\">Adding Preact to a React project</a></em></p>\n<p>I understand why people like Vue, and those people are wrong.</p>\n<p>But this isn&#8217;t a rant about Vue. If you like the ease of porting your 2012-era code to a modern framework, Vue is for you. If you&#8217;re into Mustache templates, Angular directives, and love to split your code into templates, scripts, and styles just like ye olden times, Vue is perfect. Hell, if you love nothing more than to use cumbersome workarounds to avoid JavaScript classes ðŸ‘‰ Vue.</p>\n<p>You do you. I built a Vue component and hated every minute of it. But it&#8217;s important to try new things.</p>\n<p>It took about 2 hours to add Vue to my <a href=\"https://dom-benchmark.now.sh/\">interactive DOM benchmark</a>. Half the time I spent  bitching about the Angular 1 style templates. The other half, I complained about 2012-era hacks designed to fake classes.</p>\n<p>Oh, and it took an hour just to get it compiling.</p>\n<blockquote class=\"twitter-tweet\" data-width=\"550\" data-dnt=\"true\">\n<p lang=\"en\" dir=\"ltr\">Getting started with Vue is easy they said, you&#39;ll have fun they said.</p>\n<p>vue-loader installs vue-template-es2015-compiler then complains it can&#39;t find vue-template-compiler <a href=\"https://t.co/m0w4nmp5Tf\">pic.twitter.com/m0w4nmp5Tf</a></p>\n<p>&mdash; Swizec (@Swizec) <a href=\"https://twitter.com/Swizec/status/970435615450849280?ref_src=twsrc%5Etfw\">March 4, 2018</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<p>A wonderful experience all over ðŸ‘Œ</p>\n<p><strong>BUT!</strong> I created my first non-trivial Vue component, a simple benchmark ðŸŽ‰</p>\n<h2>My first Vue component</h2>\n<div id=\"attachment_8239\" style=\"width: 810px\" class=\"wp-caption alignnone\"><img class=\"alignnone size-full wp-image-8239\" src=\"https://swizec.com/blog/wp-content/uploads/2018/03/component-screenshot.png\" alt=\"The Vue benchmark component\" width=\"800\" height=\"284\" srcset=\"https://swizec.com/blog/wp-content/uploads/2018/03/component-screenshot.png 800w, https://swizec.com/blog/wp-content/uploads/2018/03/component-screenshot-300x107.png 300w, https://swizec.com/blog/wp-content/uploads/2018/03/component-screenshot-768x273.png 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><p class=\"wp-caption-text\">The Vue benchmark component</p></div>\n<p>You can see the <a href=\"https://github.com/Swizec/dom-benchmark/blob/master/src/benchmarks/VueBenchmark.vue\">code on GitHub</a>. There are 5 buttons and a scratchpad area that renders a list of immutable nodes. Much like a chatroom or a newsfeed.</p>\n<p>Buttons can <code>prepend</code>, <code>insert</code>, <code>append</code>, <code>drop</code>, and <code>remove</code> nodes. Clicks map to methods on the Vue component that manipulate a <code>nodes</code> array in data. The template renders it as a  bunch of divs.</p>\n<pre lang=\"javascript\">\n<div class=\"row benchmark-scratchpad\">\n    <div v-for=\"k in nodes\">\n        {{ k }}\n    </div>\n</div>\n</pre>\n<p>That <code>v-for=\"k in nodes\"</code> syntax is one of my least favorite parts of Vue. Brings back memories of some Angular 1 projects I worked on. Nightmares lasted months<sup><a id=\"ffn1\" href=\"#fn1\" class=\"footnote\">1</a></sup>.</p>\n<p>Click events call instance methods via <code>v-on:click=\"func\"</code>. They manipulate the <code>nodes</code> array and that triggers a re-render. These methods look a lot like to their React counterparts, but cleaner because there&#8217;s no <code>setState</code> in Vue. I liked that ðŸ¤«</p>\n<pre lang=\"javascript\">\nprepend() {\n    this.nodes = [...this.newNodes(), ...this.nodes];\n},\n\nappend() {\n    this.nodes = [...this.nodes, ...this.newNodes()];\n},\n</pre>\n<p>I think that looks more readable and makes more sense than going through <code>setState</code> in React.</p>\n<p><em>However</em>, you have to define instance attributes in a <code>data:</code> key and instance methods in a <code>methods:</code> key. But you override Vue&#8217;s internal instance methods in the normal namespace. ðŸ¤¨</p>\n<pre lang=\"javascript\">\nmodule.exports = {\n    // adding attributes here does nothing\n \n    data: function () {\n        // this is where you define state\n        return {\n            nodes: [],\n            start: null,\n            times: [],\n            // ...\n        }\n    },\n \n    // override Vue instance methods here\n \n    methods: {\n        // define custom instance methods here\n    }\n}\n</pre>\n<p>Wat ðŸ¤¨</p>\n<p>That&#8217;s kind of how we used to write code in the old days before JavaScript got better. Did I fall into a time machine?</p>\n<p>I&#8217;ve heard you can install plugins and tweak configs to get a better approach going, but if it&#8217;s not the default in the official docs, it doesn&#8217;t exist. Ask anyone.</p>\n<p>Some people like this, so here we are. It was a fun experiment, I don&#8217;t like it at all. Â¯&#92;_(ãƒ„)_/Â¯</p>\n<p><strong>Oh btw</strong> we render benchmark results using Vue refs and direct DOM manipulation so as to avoid re-rendering via Vue after each render. That would be unfair.</p>\n<h2>Adding Vue to a nwb-cli based project</h2>\n<p>Getting Vue to compile at all was fun, too. I started the project using <a href=\"https://github.com/insin/nwb\">nwb-cli</a>, which is not The Official Wayâ„¢. You&#8217;re supposed to use <code>vue-cli</code>, but I didn&#8217;t want to start a new project.</p>\n<p>Some finagling with <code>vue-loader</code> was necessary. Two steps ðŸ‘‡</p>\n<ol>\n<li>install some stuff</li>\n<li>tweak <code>nwb.config.js</code>.</li>\n</ol>\n<h3>Install some stuff</h3>\n<pre><code>yarn add vue vue-loader vue-template-compiler\n</code></pre>\n<p>You need both <code>vue-loader</code> and <code>vue-template-compiler</code> because vue-loader actually installs <code>vue-template-es2015-compiler</code> then complains that it can&#8217;t find <code>vue-template-compiler</code>. This is confusing.</p>\n<p>I installed <a href=\"https://github.com/akxcv/vuera\">vuera</a> as well. It gives you a wrapper component so you can render Vue inside your React project. <a href=\"https://github.com/akxcv/vuera/blob/master/src/wrappers/Vue.js%60\">Vue is kept internally autonomous</a> so it shouldn&#8217;t affect the benchmark, but it makes it easier to put all benchmarks in the same project.</p>\n<pre lang=\"javascript\">\n// VueBenchmarkWrapper.js\n\nimport React from \"react\";\nimport { VueWrapper } from \"vuera\";\nimport VueBenchmark from \"./VueBenchmark.vue\";\n\nexport default () => <VueWrapper component={VueBenchmark} />;\n</pre>\n<h3>Tweak nwb.config.js</h3>\n<p>After installing Vue, you have to tell Webpack how to use it. That goes in <code>nwb.config.js</code>.</p>\n<pre lang=\"javascript\">\n// nwb.config.js\nmodule.exports = {\n    type: \"react-app\",\n    webpack: {\n        extra: {\n            module: {\n                rules: [{ \n                    test: /\\.vue$/, \n                    loader: \"vue-loader\" \n                }]\n            }\n        }\n    }\n};\n</pre>\n<p>You add a rule that tells Webpack to use <code>vue-loader</code> for files ending with <code>.vue</code>. Same as a normal Webpack config file, just wrapped in <code>extra:</code> so <code>nwb</code> knows what to do.</p>\n<p>This is where <code>nwb</code> shines over <code>create-react-app</code>. Extra config without eject.</p>\n<h2>Next step for the DOM benchmark</h2>\n<p>What I want to do next is going to blow your mind. Maybe.</p>\n<p>Remember my <a href=\"https://swizec.com/blog/blockchain-redux-experiment-part-2/swizec/8055\">blockchain-redux</a> experiment from December? I want to use it to make <a href=\"https://dom-benchmark.now.sh/\">this DOM benchmark</a> collaborative.</p>\n<p>Every time you click a button, it adds to the benchmark blockchain, distributes it to everyone, updates graphs on everyone&#8217;s page. We&#8217;re going to see how these benchmarks behave in the real world on real people&#8217;s computers.</p>\n<p>That&#8217;s gonna be fun ðŸ¤˜</p>\n<img src=\"https://media.giphy.com/media/u0v3z2iQLxyHC/giphy.gif\" />\n<ol id=\"footnotes\">\n<li id=\"fn1\">This is a dramatization. There were only cold sweats every time I opened the editor to get started. <a href=\"#ffn1\">&#8617;</a></li>\n</ol>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"c2fcba36-294e-52de-87e7-588b1eec295d"}}