{"data":{"wordpressPost":{"title":"How to make your django app slow","content":"<p>The task every developer fears <em>&#8220;Hey, I sometimes get a timeout when I want to see the last gazillion days of activity in the <a class=\"zem_slink\" title=\"Dashboard\" href=\"http://en.wikipedia.org/wiki/Dashboard\" rel=\"wikipedia\">dashboard</a>. What gives?&#8221;</em></p>\n<div style=\"width: 169px\" class=\"wp-caption alignright\"><a href=\"http://www.flickr.com/photos/20676353@N00/3188032449\"><img class=\"zemanta-img-inserted zemanta-img-configured\" title=\"Nikon GP-1 GPS Unit Test\" src=\"http://swizec.com/blog/wp-content/uploads/2012/03/3188032449_1e8783552a_m5.jpg\" alt=\"Nikon GP-1 GPS Unit Test\" width=\"159\" height=\"240\" /></a><p class=\"wp-caption-text\">Nikon GP-1 GPS Unit Test (Photo credit: AndyRamdin / ND-Photo.nl)</p></div>\n<p>This problem started happening for a project I work on a few months ago. Through a lucky sequence of events I was able to push the problem back a couple of months &#8230; mostly just a beefier VPS on amazon with a bit more memory.</p>\n<p>Yesterday I finally cleaned up <em>everything</em> <em>else</em> from pivotal tracker and was left with only that one dreaded item. That &#8230; slowness thing. Have you ever tried speeding up the execution of something when 80% of the codebase isn&#8217;t yours?</p>\n<h2>Context! I need context!</h2>\n<p>Let me give you a bit of context for what&#8217;s going on:</p>\n<ul>\n<li>the project lets customers have many users</li>\n<li>users enter events when they do stuff</li>\n<li>the entries can be checked in a dashboard</li>\n<li>there is a date-range picker to see more than just today&#8217;s events</li>\n</ul>\n<p>And that&#8217;s where it all gets ever so slightly weird. When you choose anything other than <em>today</em> things start becoming increasingly slow and sometimes certain browsers decide that it&#8217;s just too slow and timeout.</p>\n<p>No, it isn&#8217;t slow enough to cause the 30 second socket timeout.</p>\n<p>No, caching wouldn&#8217;t really benefit this activity either.</p>\n<h2>A simple benchmark</h2>\n<p>In light of what I&#8217;ve learned about <a title=\"Unit testing is for lazy people\" href=\"http://swizec.com/blog/unit-testing-is-for-lazy-people/swizec/3752\">unit testing being for lazy people</a> last week, I decided to set up a <a class=\"zem_slink\" title=\"Unit testing\" href=\"http://en.wikipedia.org/wiki/Unit_testing\" rel=\"wikipedia\">unit test</a> that is actually an <a class=\"zem_slink\" title=\"Integration testing\" href=\"http://en.wikipedia.org/wiki/Integration_testing\" rel=\"wikipedia\">integration test</a> and most likely isn&#8217;t either of those since it&#8217;s some sort of benchmark.</p>\n<p>But it goes in <a class=\"zem_slink\" title=\"Django (Web framework)\" href=\"http://www.djangoproject.com\" rel=\"homepage\">django</a>&#8216;s testing framework, the python module behind that is called unittest, so I&#8217;m calling it a unit test.</p>\n<pre lang=\"python\">    def test_date_range(self):\r\n        t1 = datetime.now()\r\n        response = self.c.post('/accounts/dashboard/',\r\n                               {'dateFrom': (datetime.now()-timedelta(days=356)).strftime(\"%m/%d/%Y\")})\r\n\r\n        t2 = datetime.now()\r\n\r\n        self.assert_((t2-t1).seconds &lt; 2, \"Too slow\")</pre>\n<p>See, simple test. All it needed was exporting the whole production database into a fixture so django loads it up every time the test is run and then cleans up after itself.</p>\n<p>The results are abominable! To return a dashboard with 250 rows of entries, this django app takes between <strong>5 and 8</strong> seconds. Clearly way way too much time!</p>\n<h2>The fix?</h2>\n<p>Indexes! Yes, adding an index where appropriate should speed things up <em>immensely</em>. Right?</p>\n<div style=\"width: 310px\" class=\"wp-caption alignright\"><a href=\"http://commons.wikipedia.org/wiki/File:Allison_T56_mobile_test_unit_MCAS_Futenma_1982.JPEG\"><img class=\"zemanta-img-inserted zemanta-img-configured\" title=\"U.S. Marine Corps SSgt. R. McIntosh, an engine...\" src=\"http://swizec.com/blog/wp-content/uploads/2012/03/300px-Allison_T56_mobile_test_unit_MCAS_Futenma_19823.jpeg\" alt=\"U.S. Marine Corps SSgt. R. McIntosh, an engine...\" width=\"300\" height=\"209\" /></a><p class=\"wp-caption-text\">Image via Wikipedia</p></div>\n<p>Nope.</p>\n<p>Creating indexes didn&#8217;t even put a dint in that benchmark. There was more fluctuation from the effect of memory pages on mysql&#8217;s performance. And anyway &#8230; what was I thinking really, indexes helping queries with less than 1000 rows of results? Don&#8217;t be silly Swizec.</p>\n<p>Now what?</p>\n<p>Added a bunch of &#8220;spent time&#8221; prints in the code and realized that even though it takes less than a second to make everything ready it then takes five seconds to render the template.</p>\n<p>Wait what! Five seconds to render the template!?</p>\n<p>Oh right &#8230; django&#8217;s querysets are lazy. That would probably explain it. The template is where those querysets get evaluated, they ping the database and that&#8217;s the explanation I&#8217;m looking for. It must be!</p>\n<p>Except it wasn&#8217;t. Due to the way the <em>view</em> is written all the querysets get iterated over before the template is rendered. And they all have that magical <em>select_related</em> so all the fields getting accessed inside the template can&#8217;t possibly be triggering more db queries can it?</p>\n<p>Well &#8230; no.</p>\n<p>The main module has a function added that returns <em>the latest related object.</em> This function, correctly, only gets called once per rendering for every model.</p>\n<p>But the function returns a queryset.</p>\n<p>That queryset is lazy and it gets evaluated <em>every single time</em> that related object is used, which turns out to be <em><strong>30 times</strong></em> per displayed row. But can 30 queries explain the slowness in rendering? Or should it be even slower if my theory was in fact correct?</p>\n<p>I don&#8217;t know, but right now I&#8217;m working on a fix to make sure that object is solidified and is not a lazy queryset before it gets pushed to the template. If it works, great &#8230; otherwise I have no idea what I&#8217;ll try next.</p>\n<p><em>user.get_profile()</em> also gets called awfully often. Wonder how that baby works &#8230;</p>\n<h6 class=\"zemanta-related-title\" style=\"font-size: 1em;\">Related articles</h6>\n<ul class=\"zemanta-article-ul\">\n<li class=\"zemanta-article-ul-li\"><a href=\"http://swizec.com/blog/unit-testing-is-for-lazy-people/swizec/3752\">Unit testing is for lazy people</a> (swizec.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://swizec.com/blog/simple-trick-for-testing-forms-full-of-checkboxes-with-django/swizec/3098\">Simple trick for testing forms full of checkboxes with django</a> (swizec.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://www.devsigh.com/sigh/424\">&#8220;architect&#8221;: we have big refactors to do on out architecture but first we need to unit test everything me: I&#8217;m all for finally</a> (devsigh.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/8664551/django-charfield-queryset-filter-without-escaping-the-mysql-wildcard\">Django charfield queryset filter without escaping the MYSQL wildcard</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/9065371/do-we-still-need-django-nonrel-now-that-gae-allegedly-supports-django-out-of-t\">Do we still need django-nonrel now that GAE (allegedly) supports Django out of the box?</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/8698794/retrieving-only-the-date-part-of-a-datetime-column-in-django\">Retrieving only the date part of a datetime column in Django</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://css.dzone.com/articles/15-key-resources-learn-django-0\">15 Key Resources to Learn Django</a> (css.dzone.com)</li>\n</ul>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=fee7947c-17cc-4d31-b348-c7a8b425b12c\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"6fe60023-8295-563f-933a-25d1c256a4e4"}}