{"data":{"wordpressPost":{"title":"Javascript&#8217;s lack of strftime","content":"<p>You know that one piece of shitty code that always makes you cringe? Something along the lines of <em>months = [&#8216;Jan&#8217;, &#8216;Feb&#8217; &#8230;.]; dateString = date.day()+&#8217; &#8216;+months[date.month()];</em></p>\n<div style=\"width: 310px\" class=\"wp-caption alignright\"><a href=\"http://commons.wikipedia.org/wiki/File:Nice_air-raid_siren.jpg\"><img class=\"zemanta-img-inserted zemanta-img-configured\" title=\"An air-raid siren in Nice, France, is still op...\" src=\"http://swizec.com/blog/wp-content/uploads/2011/12/300px-Nice_air-raid_siren2.jpg\" alt=\"An air-raid siren in Nice, France, is still op...\" width=\"300\" height=\"225\" /></a><p class=\"wp-caption-text\">Image via Wikipedia</p></div>\n<p>Yeah <strong>that</strong> piece of code. Let&#8217;s talk about <em>that</em>.</p>\n<p>It sucks. There is a special circle of hell for people who do it and yet JavaScript developers are forced to doing it all the freaking time!</p>\n<p>In <a class=\"zem_slink\" title=\"JavaScript\" href=\"http://en.wikipedia.org/wiki/JavaScript\" rel=\"wikipedia\">JavaScript</a> that&#8217;s the only way you can do it. I shit you not.</p>\n<p>A couple of days ago I caught myself writing code like that and red flags and alarms and air-raid sirens started going off in my head. I felt like that proverbial axe murderer reading my code who knows where I live was already breathing down my neck.</p>\n<p>Scary situation that.</p>\n<p>But when I went looking for an elegant way of coercing datetime into a <a class=\"zem_slink\" title=\"String (computer science)\" href=\"http://en.wikipedia.org/wiki/String_%28computer_science%29\" rel=\"wikipedia\">string</a>, I found the whole situation rather lacking. Turns out JavaScript doesn&#8217;t have a native <a class=\"zem_slink\" title=\"Time.h\" href=\"http://en.wikipedia.org/wiki/Time.h\" rel=\"wikipedia\">strftime</a> function even though it is surprisingly brilliant in converting strings to native representations.</p>\n<h2>String -&gt; Date</h2>\n<p>Have a string? Want a date? JavaScript&#8217;s got your back bro!</p>\n<pre lang=\"javascript\">// all of this correctly returns a millisecond timestamp since unix epoch\r\n// the string argument can also be passed to the date constructor by the way (returns a correct Date object)\r\nDate.parse(\"Aug 9, 1995\")\r\nDate.parse(\"Wed, 09 Aug 1995 00:00:00 GMT\")\r\nDate.parse(\"Wed, 09 Aug 1995 00:00:00\")\r\nDate.parse(\"Thu, 01 Jan 1970 00:00:00 GMT\")\r\nDate.parse(\"Thu, 01 Jan 1970 00:00:00\")\r\nDate.parse(\"Thu, 01 Jan 1970 00:00:00 GMT-0400\")</pre>\n<h2>Date -&gt; String</h2>\n<p>Have a date and want a string? You&#8217;re shit out of luck son.</p>\n<p>Pretty much the only date to string conversions javascript natively supports is returning a locale string, which is nonstandard and varies greatly computer to computer, and forms of standardized <a class=\"zem_slink\" title=\"ISO 8601\" href=\"http://en.wikipedia.org/wiki/ISO_8601\" rel=\"wikipedia\">ISO time</a>. It can do this and only this in numerous ways even!</p>\n<pre lang=\"javascript\">> var d = new Date()\r\n> d\r\nMon, 12 Dec 2011 11:28:55 GMT\r\n> d.toString()\r\n'Mon Dec 12 2011 12:28:55 GMT+0100 (CET)'\r\n> d.toDateString()\r\n'Mon Dec 12 2011'\r\n> d.toISOString()\r\n'2011-12-12T11:28:55.401Z'\r\n> d.toJSON()\r\n'2011-12-12T11:28:55.401Z'\r\n> d.toGMTString()\r\n'Mon, 12 Dec 2011 11:28:55 GMT'\r\n> d.toLocaleDateString()\r\n'Monday, December 12, 2011'\r\n> d.toLocaleString()\r\n'Mon Dec 12 2011 12:28:55 GMT+0100 (CET)'\r\n> d.toLocaleTimeString()\r\n'12:28:55'\r\n> d.toString()\r\n'Mon Dec 12 2011 12:28:55 GMT+0100 (CET)'\r\n> d.toTimeString()\r\n'12:28:55 GMT+0100 (CET)'\r\n> d.toUTCString()\r\n'Mon, 12 Dec 2011 11:28:55 GMT'\r\n</pre>\n<p>Notice how none of those functions accept a format parameter? Sure, you could get those strings and hack them apart to create a string formatted to your liking &#8230; but I&#8217;m not sure that&#8217;s the ideal approach.</p>\n<p>And let&#8217;s not even get into wanting to coerce a 12-hour time format out of this thing. Perhaps if your computer is situated in the US the localeString would return that?</p>\n<p>However I was able to find a jquery plugin that implements <a href=\"http://projects.nocternity.net/index.py/en/jquery-strftime\" target=\"_blank\">a rough strftime function</a>, although it doesn&#8217;t seem to have been actively worked on for the past three years and there are many things missing.</p>\n<h2>What?</h2>\n<p>So there you have it. JavaScript&#8217;s epic and yet abysmally poor support for date-&gt;string conversions.</p>\n<p>What do you think is it about the javascript ecosystem that tolerates this? Countless developers must have been implementing shitty code because of this and nobody has thought to complain? Nobody has gone so far as to suggest adding a simple strftime function to the language? Most popular languages seem to have this in their standard library &#8230;</p>\n<h6 class=\"zemanta-related-title\" style=\"font-size: 1em;\">Related articles</h6>\n<ul class=\"zemanta-article-ul\">\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/8472154/javascript-how-to-get-the-name-of-the-key-inside-a-function\">JavaScript &#8211; How to get the name of the key inside a function</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/8470712/javascript-random-color-function-control-brightness-and-contrast\">Javascript &#8211; Random Color Function (control brightness and contrast)</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/7728251/string-containing-the-literal-of-a-string-in-javascript\">String containing the literal of a string in JavaScript</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://marketing.yell.com/web-design/javascript-brief-introduction/\">Javascript: A very brief introduction</a> (marketing.yell.com)</li>\n</ul>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=2aa80621-36dc-42f1-9d5a-f303dc5fe62b\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"72d23676-cd55-5ee7-a488-07945746137e"}}