{"data":{"wordpressPost":{"title":"A lesson about client-side templating","content":"<div style=\"width: 350px\" class=\"wp-caption alignright\"><a href=\"http://www.flickr.com/photos/8249891@N07/4371042134\"><img class=\"zemanta-img-inserted zemanta-img-configured\" title=\"Preona Muffin Making\" src=\"http://swizec.com/blog/wp-content/uploads/2011/12/4371042134_c7431995c4_m6.jpg\" alt=\"Preona Muffin Making\" width=\"340\" /></a><p class=\"wp-caption-text\">Image by Peter ÄŒuhalev via Flickr</p></div>\n<p>The past few months have seen an explosion of <a class=\"zem_slink\" title=\"Client-side\" href=\"http://en.wikipedia.org/wiki/Client-side\" rel=\"wikipedia\">client-side</a> MVC frameworks. <a href=\"http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller#JavaScript\" target=\"_blank\">Wikipedia lists <em>eleven</em>Â of these things</a>! And yet even a year ago the majority of developers was perfectly content with jQuery.</p>\n<p>But as browser apps become ever more powerful it only makes sense to realize callback soup isn&#8217;t fun and <em>hey, wasn&#8217;t there some paradigm we use on <a class=\"zem_slink\" title=\"Server (computing)\" href=\"http://en.wikipedia.org/wiki/Server_%28computing%29\" rel=\"wikipedia\">servers</a> to make this web insanity work?</em>Â Yeah, there is.</p>\n<p>A few months ago I gave a talk entitled <em><a title=\"#WebcampLj was bitchinâ€™\" href=\"http://swizec.com/blog/webcamplj-was-bitchin/swizec/2696\">Tools that get you laid</a></em>Â at <a href=\"http://webcamp.si/\">WebCamp Ljubljana</a>. The basic premise was that client-side MVC is so insanely awesome you are sure to get laid for using it. The main benefits I talked about were:</p>\n<ol>\n<li>Server is just a DB interface, means less melting servers</li>\n<li>Effect similar to progressive loading, means users <em>see something immediately </em>&#8211; makes waiting easier</li>\n<li>Using powerful client machines to do the heavy UX lifting</li>\n<li>I may have had some other points ðŸ˜›</li>\n</ol>\n<h2>The lesson</h2>\n<p>The past four days have taught me an important lesson though &#8211; perhaps none of this is true.</p>\n<p>Since Thursday my blog has seen two months&#8217; worth of normal traffic &#8211; more about the shiny stats tomorrow &#8211; it was only natural that poor ol&#8217; <a class=\"zem_slink\" title=\"WordPress\" href=\"http://wordpress.org\" rel=\"homepage\">wordpress</a>Â would crumble under the pressure &#8230; right?</p>\n<p>Well, actualy, no, it totally shouldn&#8217;t have. There&#8217;s all this fancy caching going on that what readers see are pretty much just static pages. There&#8217;s no more PHP or server involved!</p>\n<div id=\"attachment_3215\" style=\"width: 310px\" class=\"wp-caption alignleft\"><a href=\"http://swizec.com/blog/wp-content/uploads/2011/12/Screen-Shot-2011-12-16-at-1.53.20-PM.png\"><img src=\"http://swizec.com/blog/wp-content/uploads/2011/12/Screen-Shot-2011-12-16-at-1.53.20-PM-300x175.png\" alt=\"A stats screenie\" title=\"A stats screenie\" width=\"300\" height=\"175\" class=\"size-medium wp-image-3215\" srcset=\"https://swizec.com/blog/wp-content/uploads/2011/12/Screen-Shot-2011-12-16-at-1.53.20-PM-300x175.png 300w, https://swizec.com/blog/wp-content/uploads/2011/12/Screen-Shot-2011-12-16-at-1.53.20-PM-1024x597.png 1024w, https://swizec.com/blog/wp-content/uploads/2011/12/Screen-Shot-2011-12-16-at-1.53.20-PM.png 1035w\" sizes=\"(max-width: 300px) 100vw, 300px\" /></a><p class=\"wp-caption-text\">A stats screenie</p></div>\n<p>But none of that helped. Even redirecting the <a class=\"zem_slink\" title=\"Uniform Resource Locator\" href=\"http://en.wikipedia.org/wiki/Uniform_Resource_Locator\" rel=\"wikipedia\">URL</a> with most traffic straight to the stored static page didn&#8217;t help. Something strange was happening. Something strange happens <em>every single time this blog gets some traffic</em>. This time it was particularly bad so I investigated.</p>\n<p>Turns out the problem is in the small bit of client-side templating I do in my footer.</p>\n<p>Because the pages are static, loading my latest foursquare checkin, the last four instagram pics, and the list of my github repos <em>must</em>Â happen client-side. It would be stupid to generate all this server-side every time somebody visits my site.</p>\n<p>To achieve this I&#8217;m using jquery template, it&#8217;s a bit archaic and I may have started working on the footer before finding out about backbone and other cool MVC frameworks &#8230; but it works and it&#8217;s so small I don&#8217;t think it would even benefit much from using a framework.Â The basic premise of most javascript templating is simply substring replacement, like so:</p>\n<pre lang=\"html\">\r\n<img title=\"${the_title}\" src=\"${url_var}\" alt=\"\" />\r\n</pre>\n<p>Everything marked as a variable gets replaced with its value and everyone can be happy.</p>\n<p>Try to guess what happens with that <em>src=&#8221;${url_var}&#8221;</em> bit in there. Yep, the browser tries to load it. Firing a request to something that always returns at least a 404 after wordpress decides that, hey, this isn&#8217;t something I know of!</p>\n<p>This means that the url is <em>never</em>Â cached either server-side <em>or </em>client-side!</p>\n<p>Turns out my blog was firing two such requests every time somebody came to the page. Every. Single. Time! In the latest case this meant 8 useless request per second at its peak. To the point most of my site just started throwing a 500 error and only that one redirected static page was still up &#8230;</p>\n<p>All I have to do now is find a permanent solution. Any ideas?</p>\n<h6 class=\"zemanta-related-title\" style=\"font-size: 1em;\">Related articles</h6>\n<ul class=\"zemanta-article-ul\">\n<li class=\"zemanta-article-ul-li\"><a href=\"http://blog.rassemblr.com/2011/04/on-client-side-templating/\">On Client Side Templating</a> (rassemblr.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/5371763/web-application-architecture-implementing-mvc-in-the-browser-using-a-server-as-a\">Web application architecture: Implementing MVC in the browser using a server as a repository of data and templates</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://inessential.com/2011/12/13/apps_and_web_apps_and_the_future\">Apps and web apps and the future</a> (inessential.com)</li>\n</ul>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=340db1bf-0c20-4550-b5c3-93a188eb8979\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"3968010e-e2f0-5aa7-8650-fd3566c5a762"}}