{"data":{"wordpressPost":{"title":"Simple trick for testing forms full of checkboxes with django","content":"<p>In late 2011 I hope we can all agree that <a class=\"zem_slink\" title=\"Unit testing\" href=\"http://en.wikipedia.org/wiki/Unit_testing\" rel=\"wikipedia\">unit testing</a> is pretty important when creating websites or almost anything. Doesn&#8217;t really matter whether you prefer a blackbox <a class=\"zem_slink\" title=\"Integration testing\" href=\"http://en.wikipedia.org/wiki/Integration_testing\" rel=\"wikipedia\">integration testing</a>Â approach or a strict unit testing style. What matters is that you have tests.</p>\n<div style=\"width: 310px\" class=\"wp-caption alignright\"><a href=\"http://commons.wikipedia.org/wiki/File:Series_of_build_lights.jpg\"><img class=\"zemanta-img-inserted zemanta-img-configured\" title=\"English: A series of build lights.\" src=\"http://swizec.com/blog/wp-content/uploads/2011/12/300px-Series_of_build_lights4.jpg\" alt=\"English: A series of build lights.\" width=\"300\" height=\"402\" /></a><p class=\"wp-caption-text\">Image via Wikipedia</p></div>\n<p>But what do you do when you want to test a form with a bunch of checkboxes?</p>\n<p>You want to make sure all combinations of on/off tests are working. But with even just 6 checkboxes that&#8217;s 2^6=64 test and &#8230; well nobody in their right mind is going to write that many tests are they?</p>\n<p>Last weekend I came up with a simple solution to this problem, dare I say elegant.</p>\n<p>The approach is to make a list of checkboxes, then generate <a class=\"zem_slink\" title=\"Binary numeral system\" href=\"http://en.wikipedia.org/wiki/Binary_numeral_system\" rel=\"wikipedia\">binary numbers</a> from 0 to 2^(length of list). Then simply iterate over the generated binary numbers, pick all the checkboxes with a corresponding true bit in the number and run its test &#8211; the tests are lambda functions in a dictionary.</p>\n<p>My code was complicated slightly because I had two distinct sets of checkboxes that had to be tested separately-ish, but here&#8217;s what this basically looks like in code.</p>\n<pre lang=\"python\">    _columns = ['job_code', 'location_in', 'location_out', 'shift_report']\r\n\r\n    def checkboxes(self):\r\n        checks = []\r\n\r\n        for i in range(2**len(self._columns):\r\n            column_switch = bin(j)[2:].rjust(4, '0')\r\n\r\n            checks.append([name for (yes, name) in\r\n                           zip(column_switch, self._columns) if int(yes)])\r\n\r\n        return checks</pre>\n<p>You also need to define the actual tests for all the checkboxes, deciding how thorough to be is a matter of personal taste, I like to test for the smallest possible symptom.</p>\n<pre lang=\"python\">_column_checks = {\r\n            'job_code': {True: lambda r:\r\n                             self.assert_('<th>Job Code</th>' in r.content,\r\n                                          \"no code column\"),\r\n                         False: lambda r:\r\n                             self.assert_('<th>Job Code</th>' not in r.content,\r\n                                          \"is code column\")},\r\n# and so on (this example has been violently snipped, likely missing a } or two\r\n</pre>\n<p>&#8216; in r.content, &#8220;no code column&#8221;), False: lambda r: self.assert_(&#8216;Job Code</p>\n<p>&#8216; not in r.content, &#8220;is code column&#8221;)}, # and so on</p>\n<p>And finally the whole thing becomes a simple loop</p>\n<pre lang=\"python\">     for checkboxes in self.checkboxes():\r\n          # do a bunch of posts to django to set everything up\r\n\r\n          for check in _column_checks.keys():\r\n                _column_checks[check][check in checkboxes['columns']](response)</pre>\n<p>And that&#8217;s it. Simple easily modifiable code to test every possible combination of all checkboxes in a form.</p>\n<h6 class=\"zemanta-related-title\" style=\"font-size: 1em;\">Related articles</h6>\n<ul class=\"zemanta-article-ul\">\n<li class=\"zemanta-article-ul-li\"><a href=\"http://writingtomarketing.wordpress.com/2011/09/15/4-steps-to-remove-the-share-andor-like-features/\">4 Steps to Remove the Share and/or Like Features</a> (writingtomarketing.wordpress.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://ask.metafilter.com/160124/How-can-I-use-jQuery-show-and-hide-DIVs-based-on-checkboxes-in-a-submitted-form\">How can I use jQuery show and hide DIVs based on checkboxes in a submitted form?</a> (ask.metafilter.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/8177350/how-do-i-centre-this-checkbox\">How do I centre this checkbox?</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/8290408/how-to-use-javascript-to-select-a-row-of-radio-buttons-when-a-checkbox-is-select\">How to use javascript to select a row of radio buttons when a checkbox is selected</a> (stackoverflow.com)</li>\n</ul>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=87906043-2b53-4237-bd94-c9fd53de2ca7\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"2b0b1de7-079a-56c8-9409-efe0ea44c221"}}