{"data":{"wordpressPost":{"title":"Force users to add a facebook login with devise omniauth","content":"<p>You&#8217;ve set up rails with <a href=\"https://github.com/plataformatec/devise\" target=\"_blank\">devise</a> and <a href=\"http://www.omniauth.org/\" target=\"_blank\">omniauth</a>. Users are signing up with facebook or twitter or email&amp;password or something completely different. Everything is going great.</p>\n<p>Now you want to force some users to add a facebook login to their account. Maybe you just want to see if their name and avatar match what they&#8217;ve set up in your service to make sure they really are who they say they are. Whatever.</p>\n<p>It seems like you might need to add a custom Devise strategy. You start googling. Doesn&#8217;t seem like a lot of work, you just extend <code>Authorizable</code> and override the <code>authorize!</code> function and then &#8230; do <em>something</em>. Seems you&#8217;ll have to mostly override how authorization works. Will that play well with <code>omniauthable</code>?</p>\n<p>But that only solves the problem of forcing <a class=\"zem_slink\" title=\"Facebook\" href=\"http://en.wikipedia.org/wiki/Facebook\" rel=\"wikipedia\" target=\"_blank\">Facebook</a> on authorization. Who&#8217;s going to check the conditions on every page load and sign the user out?</p>\n<p>You set up a filter. Put it in <code>application_controller</code> and it&#8217;s just a big mess. You&#8217;re still not sure how to tie everything together and the clusterfuck of code is growing and growing.</p>\n<blockquote class=\"twitter-tweet\"><p>If it’s complicated and confusing, you probably haven’t found the right approach yet. <a href=\"https://twitter.com/search?q=%23programming&amp;src=hash\">#programming</a></p>\n<p>— Swizec (@Swizec) <a href=\"https://twitter.com/Swizec/statuses/347024137086173185\">June 18, 2013</a></p></blockquote>\n<h2>Force FB with just 19 sloc</h2>\n<p>There&#8217;s a better way!</p>\n<p>I stumbled on this solution almost by accident after ending up on an obscure API doc page on my gazillionth google search. Turns out you can force a user to sign up with facebook in just under 19 <a class=\"zem_slink\" title=\"Source lines of code\" href=\"http://en.wikipedia.org/wiki/Source_lines_of_code\" rel=\"wikipedia\" target=\"_blank\">lines of code</a>.</p>\n<p>We have to extend how <em>models</em> behave, not create a new Devise strategy. The function we&#8217;re looking to override is <code>active_for_authentication?</code>.</p>\n<p>This function is called on every page load when a user is signed in and checks that they&#8217;re still active. If it returns <code>false</code> the user will be signed out and asked to login before continuing. They won&#8217;t be let through until the function returns <code>true</code>.</p>\n<p>Elegant!</p>\n<p>All you have to do is put something like this in your <code>app/classes</code> directory.</p>\n<pre lang=\"ruby\">\r\nmodule Facebookable\r\n  extend ActiveSupport::Concern\r\n\r\n  def needs_facebook?\r\n    needs_facebook && services.where(\"provider = 'Facebook'\").count < 1\r\n  end\r\n\r\n  def should_flag?\r\n    condition # get a score somehow\r\n\r\n    if condition\r\n      self.needs_facebook = true\r\n      self.save!\r\n    end\r\n  end\r\n\r\n  def active_for_authentication?\r\n    super &#038;&#038; !needs_facebook? &#038;&#038; !should_flag?()\r\n  end\r\n\r\n  def inactive_message\r\n    needs_facebook? ? \"Please sign in with Facebook.\" : super\r\n  end\r\nend\r\n</pre>\n<p>And that's essentially it. Add a boolean <code>needs_facebook</code> field to your user model and add <code>:facebookable</code> to the strategies list and you're done. Everything works.</p>\n<p>Facebookable will automatically take care of checking whether a user has facebook connected and kick them out if they don't but should. On every page load it will also check whatever condition you've set and flag the user.</p>\n<p>It took me four days to come up with those 19 lines of code because nobody's written a blogpost about how to do this properly. Now someone has.</p>\n<p>PS: testing this works the same as testing any other model methods.</p>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/?px\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=98e2b5a1-87ba-4afc-b043-b54b490c314d\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"914c41ce-5b77-5bce-8288-701ec583398f"}}