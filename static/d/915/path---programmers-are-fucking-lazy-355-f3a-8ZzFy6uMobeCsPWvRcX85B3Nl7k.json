{"data":{"wordpressPost":{"title":"Programmers are fucking lazy","content":"<div class=\"zemanta-img\" style=\"margin: 1em; display: block;\">\n<div style=\"width: 310px\" class=\"wp-caption alignright\"><a href=\"http://commons.wikipedia.org/wiki/File:Glasses_800_edit.png\"><img title=\"This image was created by Gilles Tran with POV...\" src=\"http://swizec.com/blog/wp-content/uploads/2011/10/300px-Glasses_800_edit2.png\" alt=\"This image was created by Gilles Tran with POV...\" width=\"300\" height=\"225\" /></a><p class=\"wp-caption-text\">Image via Wikipedia</p></div>\n</div>\n<p>With the possible exception of philosophers, <a class=\"zem_slink\" title=\"Programmer\" href=\"http://en.wikipedia.org/wiki/Programmer\" rel=\"wikipedia\">programmers</a> are the laziest bunch of people I know. It seems like everyone else I speak to has some sort of <a class=\"zem_slink\" title=\"Labor intensity\" href=\"http://en.wikipedia.org/wiki/Labor_intensity\" rel=\"wikipedia\">labor intensive</a> profession.</p>\n<p>Think about it, biologists do all those experiments &#8230; giving a drug to hundreds of mice is can&#8217;t be automated. Doctors have to physically inspect their patients, professors have to give the same lectures year after year, architects draw their plans in all perspectives manually and until recently did hatching by hand.</p>\n<p>Looking at more run of the mill professions it gets even worse, marketers give the same pitch over and over, hairdressers do practically the same thing day after day, store clerks handle the same groceries for customers in the same manner all the time &#8230; people in factories &#8230;</p>\n<p>You get the picture, the world is full of people doing practically the same thing day after day, hour after hour, for years on end, sometimes their whole lives.</p>\n<h2>Enter programmers, stage left.</h2>\n<p>Whenever we do the same thing twice in a row &#8211; we try to think of a way to automate the process. Whenever you write code doing the same thing, you start looking for a library. Whenever you start projects on a similar foot, you go look for a boilerplate.</p>\n<div class=\"zemanta-img zemanta-action-dragged\" style=\"margin: 1em; display: block;\">\n<div style=\"width: 250px\" class=\"wp-caption alignright\"><a href=\"http://www.flickr.com/photos/39911851@N05/4466482623\"><img title=\"Code\" src=\"http://swizec.com/blog/wp-content/uploads/2011/10/4466482623_6aea29d90a_m2.jpg\" alt=\"Code\" width=\"240\" height=\"159\" /></a><p class=\"wp-caption-text\">Image by Riebart via Flickr</p></div>\n</div>\n<p>Programmers&#8217; lives are <em>devoted</em> to eliminating repetivity.</p>\n<p>Removing menial tasks from our workflows, making lives easier for everyone. It&#8217;s a common joke that a programmer would rather spend a week making a bash script than <a class=\"zem_slink\" title=\"Cut, copy, and paste\" href=\"http://en.wikipedia.org/wiki/Cut%2C_copy%2C_and_paste\" rel=\"wikipedia\">copy paste</a> the same file twice and be done with it in two minutes.</p>\n<p>Hell, we even have the DRY (<a class=\"zem_slink\" title=\"Don't repeat yourself\" href=\"http://en.wikipedia.org/wiki/Don%27t_repeat_yourself\" rel=\"wikipedia\">Don&#8217;t Repeat Yourself</a>) principle, which basically states that it&#8217;s better to create a convoluted abstraction than to write different-but-very-similar code twice.</p>\n<p>This of course leads to a lot of problems.</p>\n<p>The average software project is so full of <a class=\"zem_slink\" title=\"Abstraction\" href=\"http://en.wikipedia.org/wiki/Abstraction\" rel=\"wikipedia\">abstractions</a> built on top of abstractions which are created on top of abstractions that it&#8217;s become virtually impossible to know what&#8217;s going on or even what your code is doing at all. <em><a href=\"https://plus.google.com/112218872649456413744/posts/dfydM2Cnepe\" target=\"_blank\">Dizzying but invisible depth</a>,</em> touches upon this subject and is a really good short read.</p>\n<p>On the other hand, laziness has proven itself as the driving force behind many of the most important scientific and engineering advances in history. It&#8217;s much easier to use a wheel than to carry things around, it&#8217;s a lot easier to use boats than it is to swim, hell, even dropping a single motherfucker of a bomb is a lot easier than dropping a thousand small bombs if you want to ruin a city for a few decades &#8230;</p>\n<p>So maybe it&#8217;s not that <em>programmers</em> are lazy. Perhaps it&#8217;s really <em>engineers</em> who are lazy and it just so happens that in this point in history programmers are the most obvious sort of engineer working the most madly towards a better and brighter future. Most other fields have already sort of stabilised and/or take longer to adapt to new tools.</p>\n<p>An important question to ask here is: Are programmers naturally lazy? Are smart <a class=\"zem_slink\" title=\"Laziness\" href=\"http://en.wikipedia.org/wiki/Laziness\" rel=\"wikipedia\">lazy people</a> drawn to programming or is this a social effect? Does laziness stem from the best programming practices? Or do the best programming practices stem from laziness?</p>\n<h2>A comparison</h2>\n<p>Recently I had a nice opportunity to compare how an architecture major goes about her day and how a computer science major such as me goes about his day.</p>\n<p>Most of the architect&#8217;s life is filled with doing this or that labor intensive task as part of her homework. At any given time she is likely to be glueing some pieces of a model together, drawing the same object from fifty perspectives in autocad, or redrawing the same thing yet again in a <a class=\"zem_slink\" title=\"3D computer graphics software\" href=\"http://en.wikipedia.org/wiki/3D_computer_graphics_software\" rel=\"wikipedia\">3D modeling software</a> &#8230; which then gets imported into photoshop to become really pretty.</p>\n<div class=\"zemanta-img zemanta-action-dragged\" style=\"margin: 1em; display: block;\">\n<div style=\"width: 250px\" class=\"wp-caption alignleft\"><a href=\"http://www.flickr.com/photos/51638848@N00/4385225489\"><img title=\"Rapid Architecture\" src=\"http://swizec.com/blog/wp-content/uploads/2011/10/4385225489_4f3b12247a_m2.jpg\" alt=\"Rapid Architecture\" width=\"240\" height=\"127\" /></a><p class=\"wp-caption-text\">Image by Jon Olav via Flickr</p></div>\n</div>\n<p>It&#8217;s a constant barrage. By my estimates she probably spends twice as much time on coursework than she does actually attending class. [** she said it&#8217;s actually 5-times more] And to make matters worse, getting better at this stuff doesn&#8217;t really speed up the process, it just means you know a few more keyboard shortcuts and make less mistakes when drawing.</p>\n<p>Proficiency doesn&#8217;t optimize the critical section <em>at all</em>.</p>\n<p>Contrast that with me. When I&#8217;m not attending class I&#8217;m usually working on my own projects. Because I can, because there&#8217;s plenty of time. When homework comes around, if it does, it can usually be dealt with in a matter of hours &#8230; even the most critically insane projects they give us rarely take more than a week of concentrated work, two weeks at most.</p>\n<p>Proficiency in coding doesn&#8217;t mean typing faster (the equivalent of proficiency in architecture). It means thinking up solutions that are easier to implement, using tools that do half the work you&#8217;re supposed to be doing and so on. Eventually, as judged by internet dick measuring contests, <a class=\"zem_slink\" title=\"Implementation\" href=\"http://en.wikipedia.org/wiki/Implementation\" rel=\"wikipedia\">implementation</a> is the irrelevant part because everyone can do it. If you&#8217;ve got a day, you implement something, if you&#8217;ve got more time you also make it pretty and modular and reusable and so on.</p>\n<p>Basically you&#8217;re done implementing the thing so quickly, most of your work is devoted to making the implementation prettier. But this isn&#8217;t really important to the task at hand, you do it because you <em>can</em>.</p>\n<p>It almost seems like when programmers get bored of even making their implementations prettier, they turn to creating tools to make the implementation pretty right off the bat.</p>\n<p>And the cycle repeats itself.</p>\n<p>The next guy will use that new tool to implement something even quicker, then begin polishing it until he eventually gets fed up and creates a new even better tool.</p>\n<h2>So &#8230; hard work?</h2>\n<p>But to cycle back on my original point, how much does <em>working hard</em> even factor into programmers&#8217; productivity? What does this mean for all those startups working 13 hours a day to gain an edge on the competition? Is this even an edge worth considering?</p>\n<div class=\"zemanta-img zemanta-action-dragged\" style=\"margin: 1em; display: block;\">\n<div style=\"width: 250px\" class=\"wp-caption alignleft\"><a href=\"http://www.flickr.com/photos/24943311@N07/3919560473\"><img title=\"Hard worker\" src=\"http://swizec.com/blog/wp-content/uploads/2011/10/3919560473_67c3256b2a_m.jpg\" alt=\"Hard worker\" width=\"240\" height=\"160\" /></a><p class=\"wp-caption-text\">Image by Frodrig via Flickr</p></div>\n</div>\n<p>Hard work might even have a negative effect on <a class=\"zem_slink\" title=\"Programming productivity\" href=\"http://en.wikipedia.org/wiki/Programming_productivity\" rel=\"wikipedia\">programmer productivity</a>. It obscures optimizations behind &#8220;Oh, I can do this by hand, it will only take ten minutes&#8221; (it takes 20). And the next time a similar task rolls around you have to do it manually again and so on.</p>\n<p>Most importantly, hard work makes you stupid. Being tired leads to bad decisions, even making too many decisions leads to bad decisions (<a href=\"http://en.wikipedia.org/wiki/Decision_fatigue\" target=\"_blank\">decision fatigue</a>) as many studies have shown. In fact, that might be the best use of all the abstractions we like producing &#8211; let someone else to most of the decisions so I can focus on only the critical ones.</p>\n<p>But I still don&#8217;t know if lazy people are drawn to programming, or does programming make them lazy &#8230;</p>\n<h6 class=\"zemanta-related-title\" style=\"font-size: 1em;\">Related articles</h6>\n<ul class=\"zemanta-article-ul\">\n<li class=\"zemanta-article-ul-li\"><a href=\"http://socyberty.com/philosophy/avoiding-laziness/\">Avoiding Laziness</a> (socyberty.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://wisdomformysons.wordpress.com/2011/10/18/know-it-alls-have-the-darkest-future-10-18-11/\">Know it alls have the darkest future. 10.18.11</a> (wisdomformysons.wordpress.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://njpoems.wordpress.com/2011/10/07/laziness/\">&#8220;Laziness&#8221;</a> (njpoems.wordpress.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://colinm.org/language_checklist.html\">Why your new programming language won&#8217;t work</a> (colinm.org)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://www.johndcook.com/blog/2011/08/31/what-most-c-programmers-do/\">What most C++ programmers do</a> (johndcook.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://myrichlifeuk.wordpress.com/2011/10/16/how-to-be-productive-when-you-are-truly-lazy/\">How to be Productive When You Are Truly Lazy</a> (myrichlifeuk.wordpress.com)</li>\n</ul>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=aa5b33f5-872f-41a2-89e9-e4f986be1967\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"1dac3d95-cb5d-5db2-8fd1-e24fac7f781e"}}