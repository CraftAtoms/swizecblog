{"data":{"wordpressPost":{"title":"FANN &#8211; neural networks made easy","content":"<div id=\"attachment_3718\" style=\"width: 310px\" class=\"wp-caption alignright\"><a href=\"http://swizec.com/blog/wp-content/uploads/2012/02/Selection_053.png\"><img class=\"size-medium wp-image-3718\" title=\"Convergence!\" src=\"http://swizec.com/blog/wp-content/uploads/2012/02/Selection_053-300x174.png\" alt=\"Convergence!\" width=\"300\" height=\"174\" srcset=\"https://swizec.com/blog/wp-content/uploads/2012/02/Selection_053-300x174.png 300w, https://swizec.com/blog/wp-content/uploads/2012/02/Selection_053.png 762w\" sizes=\"(max-width: 300px) 100vw, 300px\" /></a><p class=\"wp-caption-text\">Convergence!</p></div>\n<p>Over the weekend I was struck with the realization that I don&#8217;t know <em>how to use <a class=\"zem_slink\" title=\"Neural network\" href=\"http://en.wikipedia.org/wiki/Neural_network\" rel=\"wikipedia\">neural networks</a> in practice, damn it. </em>Even though a few months ago <a title=\"I think I finally understand what a neural network is\" href=\"http://swizec.com/blog/i-think-i-finally-understand-what-a-neural-network-is/swizec/2891\" target=\"_blank\">I realized what neural networks are</a>, even though I&#8217;ve <a title=\"I suck at implementing neural networks in octave\" href=\"http://swizec.com/blog/i-suck-at-implementing-neural-networks-in-octave/swizec/2929\" target=\"_blank\">tried implementing them</a>, even though I&#8217;ve used them in a class setting &#8230;</p>\n<p>How the hell do you use these things in real life!?</p>\n<p>Implement from scratch? &#8230; no that can&#8217;t be it.</p>\n<p>Find a library, write some code, run some tests, fiddle with features, run a test, fiddle with features, realize everything is slow, decide to use more layers, fiddle with features, play around with activation functions, run a test, fiddle with features, rewrite the code because it&#8217;s a mess, fiddle with features, run a test, run the network, run more tests and so on and on <em>ad nauseum</em>.</p>\n<p>That can&#8217;t be it either &#8230;</p>\n<h2>FANN</h2>\n<p>Looking far and wide for a good library to use I stumbled upon <a href=\"http://leenissen.dk/fann/wp/\" target=\"_blank\">FANN &#8211; Fast Artificial Neural Networks</a>.</p>\n<blockquote><p>Fast Artificial Neural Network Library is a free open source neural network library, which implements multilayer artificial neural networks in C with support for both fully connected and sparsely connected networks. Cross-platform execution in both fixed and floating point are supported. It includes a framework for easy handling of <a class=\"zem_slink\" title=\"Training set\" href=\"http://en.wikipedia.org/wiki/Training_set\" rel=\"wikipedia\">training data</a> sets. It is easy to use, versatile, well documented, and fast. Bindings to more than <a href=\"http://leenissen.dk/fann/wp/language-bindings/\">15 programming languages</a> are available. An easy to read introduction <a href=\"http://fann.sf.net/fann_en.pdf\">article</a> and a <a href=\"http://leenissen.dk/fann/html/index.html\" target=\"_top\">reference manual</a> accompanies the library with examples and recommendations on how to use the library. Several graphical <a href=\"http://leenissen.dk/fann/wp/graphical-interface/\">user interfaces</a> are also available for the library.</p></blockquote>\n<p>Perfect!</p>\n<p>Not only has someone gone to the trouble of implementing everything and making sure it works &#8211; nothing sucks more than figuring out whether you&#8217;re using your learning software wrong or it&#8217;s just buggy &#8211; they even gave it all the fiddly features I need!</p>\n<p>It gets better! There&#8217;s a slew of graphical interfaces -&gt; You get to play with the fiddly bits without even knowing what you&#8217;re doing! Yes!</p>\n<p>Put the data in the fann format, load it up, and away you go. Playing around until you figure out what you&#8217;re looking for, then you can just implement the same thing with the FANN binding of your choice.</p>\n<div id=\"attachment_3715\" style=\"width: 801px\" class=\"wp-caption alignnone\"><a href=\"http://swizec.com/blog/wp-content/uploads/2012/02/Selection_050.png\"><img class=\"size-full wp-image-3715\" title=\"It can suggest a good training algo\" src=\"http://swizec.com/blog/wp-content/uploads/2012/02/Selection_050.png\" alt=\"It can suggest a good training algo\" width=\"791\" height=\"429\" srcset=\"https://swizec.com/blog/wp-content/uploads/2012/02/Selection_050.png 791w, https://swizec.com/blog/wp-content/uploads/2012/02/Selection_050-300x162.png 300w\" sizes=\"(max-width: 791px) 100vw, 791px\" /></a><p class=\"wp-caption-text\">It can suggest a good training algo</p></div>\n<div id=\"attachment_3717\" style=\"width: 769px\" class=\"wp-caption alignnone\"><a href=\"http://swizec.com/blog/wp-content/uploads/2012/02/Selection_052.png\"><img class=\"size-full wp-image-3717\" title=\"You get to set up the neural network\" src=\"http://swizec.com/blog/wp-content/uploads/2012/02/Selection_052.png\" alt=\"You get to set up the neural network\" width=\"759\" height=\"291\" srcset=\"https://swizec.com/blog/wp-content/uploads/2012/02/Selection_052.png 759w, https://swizec.com/blog/wp-content/uploads/2012/02/Selection_052-300x115.png 300w\" sizes=\"(max-width: 759px) 100vw, 759px\" /></a><p class=\"wp-caption-text\">You get to set up the neural network</p></div>\n<div id=\"attachment_3716\" style=\"width: 774px\" class=\"wp-caption alignnone\"><a href=\"http://swizec.com/blog/wp-content/uploads/2012/02/Selection_051.png\"><img class=\"size-full wp-image-3716\" title=\"Fiddly bits!\" src=\"http://swizec.com/blog/wp-content/uploads/2012/02/Selection_051.png\" alt=\"Fiddly bits!\" width=\"764\" height=\"462\" srcset=\"https://swizec.com/blog/wp-content/uploads/2012/02/Selection_051.png 764w, https://swizec.com/blog/wp-content/uploads/2012/02/Selection_051-300x181.png 300w\" sizes=\"(max-width: 764px) 100vw, 764px\" /></a><p class=\"wp-caption-text\">Fiddly bits!</p></div>\n<div id=\"attachment_3718\" style=\"width: 772px\" class=\"wp-caption alignnone\"><a href=\"http://swizec.com/blog/wp-content/uploads/2012/02/Selection_053.png\"><img class=\"size-full wp-image-3718\" title=\"Watch it converge in real time\" src=\"http://swizec.com/blog/wp-content/uploads/2012/02/Selection_053.png\" alt=\"Watch it converge in real time\" width=\"762\" height=\"443\" srcset=\"https://swizec.com/blog/wp-content/uploads/2012/02/Selection_053.png 762w, https://swizec.com/blog/wp-content/uploads/2012/02/Selection_053-300x174.png 300w\" sizes=\"(max-width: 762px) 100vw, 762px\" /></a><p class=\"wp-caption-text\">Watch it converge in real time</p></div>\n<h2>Done in a few hours</h2>\n<p>FANN really saved my skin last night. At least the <a class=\"zem_slink\" title=\"Graphical user interface\" href=\"http://en.wikipedia.org/wiki/Graphical_user_interface\" rel=\"wikipedia\">GUI</a> did. I still haven&#8217;t solved my problem &#8211; trying to predict how many people will read a whole post &#8211; but it took me literally a couple of minutes to realize that the same network can&#8217;t be used to predict two outputs since it won&#8217;t even converge.</p>\n<p>That&#8217;s something very specific to the problem.</p>\n<p>I also realized the networks were overfitting my data, then performing poorly on the test.</p>\n<p>Another specific thing.</p>\n<p>It is because of this incredibly problem-specific nature of most work involving neural networks that having tools like these is really important. Who wants to fiddle around with implementing all this stuff by hand for several hours before even running the first tests?</p>\n<p>I probably ran twenty or thirty different configurations in the space of three hours last night. Could I have done that without a simple tool? Probably not &#8211; wouldn&#8217;t even have the first configuration implemented by now.</p>\n<p>Now if only the GUI tool calculated precision and recall instead of mean standard error &#8230;</p>\n<h6 class=\"zemanta-related-title\" style=\"font-size: 1em;\">Related articles</h6>\n<ul class=\"zemanta-article-ul\">\n<li class=\"zemanta-article-ul-li\"><a href=\"http://swizec.com/blog/i-think-i-finally-understand-what-a-neural-network-is/swizec/2891\">I think I finally understand what a neural network is</a> (swizec.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://swizec.com/blog/i-suck-at-implementing-neural-networks-in-octave/swizec/2929\">I suck at implementing neural networks in octave</a> (swizec.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://horicky.blogspot.com/2012/02/characteristics-of-machine-learning.html\">Characteristics of Machine Learning Model</a> (horicky.blogspot.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/8595741/neural-network-should-the-algorithm-be-rewritten-for-every-case\">Neural network: should the algorithm be rewritten for every case?</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/8697054/is-it-possible-for-encog-or-neuroph-to-run-on-android\">Is it possible for Encog or Neuroph to run on Android?</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://swizec.com/blog/sabbatical-week-day-3-raining-datatypes/swizec/3293\">Sabbatical week day 3: Raining datatypes</a> (swizec.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/8682766/c-machine-learning-framework\">C++ machine learning framework</a> (stackoverflow.com)</li>\n</ul>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=3b9f04bc-86a6-49e2-b0f1-6044eb94681d\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"46253548-69df-5c2f-bbdb-8b24303b475e"}}