{"data":{"wordpressPost":{"title":"Learning me a Haskell","content":"<div style=\"width: 310px\" class=\"wp-caption alignright\"><a href=\"http://commons.wikipedia.org/wiki/File:Haskell-Logo.svg\"><img class=\"zemanta-img-inserted zemanta-img-configured\" title=\"English: The Haskell Logo, a stylized &gt;Î»= . Th...\" src=\"http://swizec.com/blog/wp-content/uploads/2011/12/300px-Haskell-Logo.svg_4.png\" alt=\"English: The Haskell Logo, a stylized &gt;Î»= . Th...\" width=\"300\" height=\"212\" /></a><p class=\"wp-caption-text\">Image via Wikipedia</p></div>\n<p>A couple of days ago I decided that doing my graduation thesis on a topic that, when suggested, brought a sparkle to my mentor&#8217;s eye and made him suggest I might want to think about picking a co-mentor just wasn&#8217;t hard enough &#8211; so I decided to do the whole thing in <a class=\"zem_slink\" title=\"Haskell (programming language)\" href=\"http://haskell.org\" rel=\"homepage\">Haskell</a>.</p>\n<p>I want to show you what I&#8217;ve learned of Haskell in just a few hours, you can skip the next five-ish paragraphs to get to the juicy code examples ðŸ™‚</p>\n<p>Now I&#8217;ve never done Haskell before, I&#8217;ve heard about how awesome it is and that it&#8217;s super fast and super awesome and utterly and strictly functional and did I mention I&#8217;ve heard it&#8217;s awesome? Until a couple of days ago I didn&#8217;t even really know what Haskell looked like!</p>\n<p>The graduation thesis really seemed like the perfect excuse to get into Haskell &#8211; and I&#8217;ve been looking for one for a while. Somehow when I started out learning <a class=\"zem_slink\" title=\"Functional programming\" href=\"http://en.wikipedia.org/wiki/Functional_programming\" rel=\"wikipedia\">functional programming</a> with <a class=\"zem_slink\" title=\"Clojure\" href=\"http://clojure.org\" rel=\"homepage\">Clojure</a> it didn&#8217;t really reel me in, Haskell so far looks like it might capture my heart.</p>\n<p>Maybe it&#8217;s just the cool writing of Miran Lipovaca who published <em><a href=\"http://learnyouahaskell.com/\" target=\"_blank\">Learn you a Haskell</a></em>Â in April this year (and made it available for free on the great wide interwebs), that&#8217;s making the learning curve slightly easier to digest than it was when I was doing Clojure. (he was also my classmate in high school and is my sort-of classmate now in college, which makes the whole thing that much awesomer)</p>\n<p>The first thing I noticed is just how bloody expressive Haskell is, it feels like I&#8217;m writing much less code than I&#8217;m used to in both <a class=\"zem_slink\" title=\"JavaScript\" href=\"http://en.wikipedia.org/wiki/JavaScript\" rel=\"wikipedia\">JavaScript</a> and <a class=\"zem_slink\" title=\"Python (programming language)\" href=\"http://www.python.org/\" rel=\"homepage\">Python</a> to achieve cool stuff. Definitely less than when I was trying to learn Clojure by just perusing the docs.</p>\n<p>After 3 hours of learning Haskell, here&#8217;s how it compares to my Python and Javascript &#8211; I had originally wanted to compare to Clojure, but that was just embarrasing ðŸ™‚</p>\n<h2>Sum multiples of 3 and 5 under 1000</h2>\n<p>Haskell:</p>\n<pre lang=\"haskell\">sum [x | x <- [1..999], mod x 5 == 0 || mod x 3 == 0]</pre>\n<p>Python:</p>\n<pre lang=\"python\">sum([x for x in range(1000) if x%3 == 0 or x%5 == 0])</pre>\n<p>Javascript:</p>\n<pre lang=\"javascript\">for (var x=0,s=0; x < 1000; x++, (x%3==0 || x%5==0) ? s+=x : s) {}\r\ns</pre>\n<h2>Sum of even fibonacci terms under 4,000,000</h2>\n<p>Haskell:</p>\n<pre lang=\"haskell\">fib :: [Int] -> [Int]\r\nfib terms\r\n  | head terms < max' = fib ((sum (take 2 terms)):terms)\r\n  | otherwise = terms\r\n  where max' = 4000000\r\n\r\nsum [x | x <- fib [1], mod x 2 == 0]\r\n</pre>\n<p>Python:</p>\n<pre lang=\"python\">def fib(terms):\r\n     return terms if terms[0] >= 4000000 else fib([terms[0]+terms[1]]+terms)\r\nsum(filter(lambda x: x%2 == 0, fib([1,1])))</pre>\n<p>Javascript:</p>\n<pre lang=\"javascript\">function fib(l) { return (l[0] &gt;= 4000000) ? l : fib([l[0]+l[1]].concat(l)) }\r\nfib([1,1]).filter(function (a) { return a%2 == 0}).reduce(function (a,b) { return a+b })</pre>\n<p>I was writing the python and javascript examples directly in the console, hence less new lines. But the point is, even after just very little time, haskell is proving to be pretty much as expressive as my two primary languages where I know <del datetime=\"2011-12-23T16:55:53+00:00\">all</del> a lot of the tricks.</p>\n<p>This looks like the beginning of a long relationship.</p>\n<h6 class=\"zemanta-related-title\" style=\"font-size: 1em;\">Related articles</h6>\n<ul class=\"zemanta-article-ul\">\n<li class=\"zemanta-article-ul-li\"><a href=\"http://swizec.com/blog/crowdsourcing-elegance/swizec/2608\">Crowdsourcing elegance</a> (swizec.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://mathias-biilmann.net/posts/2011/10/is-haskell-the-cure\">Is Haskell the Cure?</a> (mathias-biilmann.net)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://drknucklehead.wordpress.com/2011/10/11/solving-problems-using-clojure-sequences/\">Solving Problems Using Clojure Sequences</a> (drknucklehead.wordpress.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://blog.raynes.me/blog/2011/11/27/the-clojure-community-and-me/\">The Clojure Community and Me</a> (raynes.me)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/7854040/haskell-inefficient-fibonacci-implementation\">haskell inefficient fibonacci implementation</a> (stackoverflow.com)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://www.yellosoft.us/evilgenius/\">Haskell for the Evil Genius</a> (yellosoft.us)</li>\n<li class=\"zemanta-article-ul-li\"><a href=\"http://stackoverflow.com/questions/8366093/heading-a-file-one-line-at-a-time-in-haskell\">Heading a file one line at a time in Haskell</a> (stackoverflow.com)</li>\n</ul>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=9436ee3b-db83-41f4-bece-a7b4eb989080\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"9d77648d-602b-58a6-b0ca-b2e6ccd07e93"}}