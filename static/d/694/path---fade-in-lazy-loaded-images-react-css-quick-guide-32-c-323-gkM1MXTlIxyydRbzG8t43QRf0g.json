{"data":{"wordpressPost":{"title":"Fade in lazy loaded images with React and CSS – a quick guide","content":"<p>Say you want to lazy load some images on your website. You don&#8217;t want them to just pop into existence and scare the user. A nice fade in effect works much better.</p>\n<img class=\"alignnone size-full wp-image-8162\" src=\"https://swizec.com/blog/wp-content/uploads/2018/01/gif.gif\" width=\"860\" height=\"483\" />\n<p>Here&#8217;s the problem: There&#8217;s no good pre-built React component for this. Or I suck at finding it.</p>\n<p>There&#8217;s a <a href=\"https://github.com/jasonslyvia/react-lazyload\">react-lazyload</a>, which does the lazy loading part for you. It keeps components from mounting into the DOM until the user actually sees them.</p>\n<p>This helps make your website faster to load. No need to load large images until a user can actually see them.</p>\n<p>But the default experience can be jarring. When images finally load, they just pop into view.</p>\n<p><code>react-lazyload</code> offers a fade-in example, but it&#8217;s outdated and doesn&#8217;t work with modern libraries. And it&#8217;s cumbersome to use.</p>\n<p>So I built a general <code>FadeIn</code> component. I&#8217;ll opensource it, but it needs some polish first, and I&#8217;d like your opinions on how to make it better.</p>\n<h2><FadeIn /></h2>\n<p>The component is just 40 lines of code. Pretty simple.</p>\n<pre lang=\"javascript\">\nclass FadeIn extends React.Component {\n  state = {\n    loaded: false,\n  };\n  onLoad = () => this.setState({ loaded: true });\n\n  render() {\n    const { height, children } = this.props,\n      { loaded } = this.state;\n\n    return (\n      <LazyLoad height={height} offset={150}>\n        <Transition in={loaded} timeout={duration}>\n          {state =>\n            <div style={{ ...defaultStyle, ...transitionStyles[state] }}>\n              {children(this.onLoad)}\n            </div>}\n        </Transition>\n      </LazyLoad>\n    );\n  }\n}\nFadeIn.propTypes = {\n  height: PropTypes.number,\n  children: PropTypes.func,\n};\n</pre>\n<p><code>FadeIn</code> keeps local <code>loaded</code> state to keep track of what to show. <code>false</code> means &#8220;stay transparent&#8221;, <code>true</code> means &#8220;fade to full opacity&#8221;.</p>\n<p>It uses react-lazyload&#8217;s <code>LazyLoad</code> component to handle the lazy loading part, and <code>Transition</code> from <a href=\"https://github.com/reactjs/react-transition-group\">react-transition-group</a> to drive the CSS transition for fading in. This is the part that&#8217;s changed a lot since the <a href=\"https://github.com/jasonslyvia/react-lazyload/blob/master/examples/pages/fadein.js\">official fadein lazyload example</a>.</p>\n<p>Using the children render function approach, you can ask <code>FadeIn</code> to render anything you want. It gets wrapped in a div that handles the fade effect.</p>\n<p>All you have to do is trigger the <code>onLoad</code> callback once your content is ready. When your image is done loading for example.</p>\n<pre lang=\"javascript\">\n<FadeIn height={400}>\n{onLoad =>\n  <img className={cx('img')} src={subheader2} onLoad={onLoad} />\n}\n</FadeIn>\n</pre>\n<p>You render <code>&lt;FadeIn&gt;</code>, give it a height so things don&#8217;t jump around, and pass a children function that takes an <code>onLoad</code> callback. When you&#8217;re ready to trigger the transition, you call <code>onLoad</code> and <code>FadeIn</code> does its thing.</p>\n<p>Did you know <code>onLoad</code> was a built-in DOM callback that all browsers support? I had no idea.</p>\n<p><code>onLoad</code> is important because without it the FadeIn transition might end before the image has even come down the pipe. That&#8217;s the issue I was facing at first <a href=\"https://www.youtube.com/watch?v=k5DnlFjuf80\">when I livecoded this</a>.</p>\n<h2>Recommendations?</h2>\n<p>I want to opensource this. I know it&#8217;s simple, but it could save people like an hour of their time. That&#8217;s worth it, right?</p>\n<p>What else does it need to do? What should I name it? Would you use it?</p>\n<p><a href=\"https://twitter.com/swizec\">Shout at me on Twitter.</a></p>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"cecbd397-c201-5858-b794-b57d5b62f70c"}}