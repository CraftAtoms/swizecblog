{"data":{"wordpressPost":{"title":"My very own daily WTF","content":"<p>People often hire me to grab their <a class=\"zem_slink\" title=\"Codebase\" href=\"http://en.wikipedia.org/wiki/Codebase\" rel=\"wikipedia\" target=\"_blank\">codebase</a> by the horns and introduce a modicum of engineering standards. Eventually I get to implement new features, but they usually come at the cost of heavy refactoring before I can even get started.</p>\n<div style=\"width: 169px\" class=\"wp-caption alignright\"><a href=\"http://www.flickr.com/photos/48080704@N06/8364284798\" target=\"_blank\"><img class=\"zemanta-img-inserted zemanta-img-configured\" title=\"JavaScript\" src=\"http://farm9.static.flickr.com/8226/8364284798_807d9de35e_m.jpg\" alt=\"JavaScript\" width=\"159\" height=\"240\" /></a><p class=\"wp-caption-text\">JavaScript (Photo credit: Johannes_wl)</p></div>\n<p>A good month ago a founder emails me <em>&#8220;Hey, I have this product, customer development at a point where big customers are waiting with fat checks to use product. I can&#8217;t even get it to run, original developers nowhere to be seen. Can you help?&#8221;</em></p>\n<p>The original developers fleeing was a bit of a red flag, but the product was right up my alley: node.js, mongodb, plenty of real-time data flow and speed requirements for updating the UI. The names of waiting users made my ears perk up as well.</p>\n<p>I&#8217;ll do it! How bad could it be?</p>\n<h2>A daily dose of WTF</h2>\n<p>It could be very bad.</p>\n<p>Part of the project is done in <a class=\"zem_slink\" title=\"Java (programming language)\" href=\"http://www.oracle.com/technetwork/java/\" rel=\"homepage\" target=\"_blank\">Java</a>. This makes sense, strict typing is the only logical decision considering what the codebase is doing.</p>\n<p>Everything else is done in <a class=\"zem_slink\" title=\"JavaScript\" href=\"http://en.wikipedia.org/wiki/JavaScript\" rel=\"wikipedia\" target=\"_blank\">JavaScript</a>. The communication protocol between Java and server JavaScript and frontend JavaScript &#8230; well that&#8217;s got a ban on parameter names being longer than three characters.</p>\n<p>Okay, saving bandwidth, right? We&#8217;re talking about a high volume of data so let&#8217;s keep those json objects small.</p>\n<p>That&#8217;s where things get tricky.</p>\n<p>Because the core protocol only features names that are 3 characters long, so does the database. And because the database is full of such objects, guess what happens next? That&#8217;s right! Most of the codebase is an incoherent mess of variable names are no longer than 3 characters.</p>\n<p>The habit leaks beyond variables touching the data.</p>\n<p>Why write <em>label</em> when you can have <em>lbl</em>? And so on and on &#8230; in almost two months of working on this codebase, I still have no idea what most of the names actually mean. I use them as pictograms describing vague concepts. I&#8217;m starting to get a feel for how they fit together.</p>\n<p>It gets better.</p>\n<p>How do you make a <a class=\"zem_slink\" title=\"Boolean data type\" href=\"http://en.wikipedia.org/wiki/Boolean_data_type\" rel=\"wikipedia\" target=\"_blank\">boolean value</a> fit this protocol? By doing this:</p>\n<pre lang=\"javascript\">function fix(boolean_value) {\r\n    return boolean_value ? 'tru' : 'fls';\r\n}</pre>\n<p>So much for saving space. Encode 1bit values into 24bit strings! Booyah!</p>\n<p>Oh I wish that was all, here&#8217;s another interesting thing I discovered &#8230; this is repeated through much of the code and I don&#8217;t dare touch it because I don&#8217;t know what crazy things will break.</p>\n<p>Did I mention there&#8217;s no <a class=\"zem_slink\" title=\"Unit testing\" href=\"http://en.wikipedia.org/wiki/Unit_testing\" rel=\"wikipedia\" target=\"_blank\">unit tests</a>? How about that I&#8217;m discouraged for writing them? Yep. But hey, it&#8217;s not like this application needs to go through a proper security audit when it&#8217;s done &#8230; oh wait, it does.</p>\n<pre lang=\"javascript\">if (!thing || thing === 'null') ...</pre>\n<p>Lovely huh? <em>Of course</em> null is encoded as a string. How else would you do it?</p>\n<p>I try to convince myself there was a good reason for this originally.</p>\n<p>But I could live with all of that, some of it might have sounded reasonable at the time, or might simply be a result of deluded optimisations and whatnot. It&#8217;s bad, but something I can live with.</p>\n<p>Here&#8217;s the stuff that really makes my life difficult:</p>\n<pre lang=\"javascript\">function getPurple(cake) {\r\n   cake.color = global_color_setting;\r\n   return cake;\r\n}</pre>\n<p>I don&#8217;t know how to even <em>begin</em> refactoring that so it makes sense &#8230; it&#8217;s just &#8230; what? Who does that!?</p>\n<p>However, the worst thing, the absolute worst thing is that some time in the past this application was moved from traditional <a class=\"zem_slink\" title=\"JQuery\" href=\"http://jquery.com/\" rel=\"homepage\" target=\"_blank\">jQuery</a> to <a href=\"http://backbonejs.org/\" target=\"_blank\">Backbone</a>. Nothing wrong with that, great move I&#8217;d say, I love Backbone!</p>\n<p>They forgot to move most things. A lot of times Backbone is just a thin wrapper around old stuff. Most of the code doesn&#8217;t even leverage Backbone and there&#8217;s still a bunch of <em>$.ajax</em> peppered everywhere.</p>\n<p>And don&#8217;t even get me started on <em>&#8220;Hey, we changed name X in the protocol, can you change all references to that please&#8221; </em>in a weakly typed language with no unit tests &#8230; fun times. I never know when something&#8217;s going to blow up because I forgot to click on a button when testing.</p>\n<p>Grep only gets you so far &#8230;</p>\n<h6 class=\"zemanta-related-title\" style=\"font-size: 1em;\">Related articles</h6>\n<ul class=\"zemanta-article-ul zemanta-article-ul-image\" style=\"margin: 0; padding: 0; overflow: hidden;\">\n<li class=\"zemanta-article-ul-li-image zemanta-article-ul-li\" style=\"padding: 0; background: none; list-style: none; display: block; float: left; vertical-align: top; text-align: left; width: 84px; font-size: 11px; margin: 2px 10px 10px 2px;\"><a style=\"box-shadow: 0px 0px 4px #999; padding: 2px; display: block; border-radius: 2px; text-decoration: none;\" href=\"http://timelessrepo.com/json-isnt-a-javascript-subset/\" target=\"_blank\"><img style=\"padding: 0; margin: 0; border: 0; display: block; width: 80px; max-width: 100%;\" src=\"http://i.zemanta.com/136156352_80_80.jpg\" alt=\"\" /></a><a style=\"display: block; overflow: hidden; text-decoration: none; line-height: 12pt; height: 80px; padding: 5px 2px 0 2px;\" href=\"http://timelessrepo.com/json-isnt-a-javascript-subset/\" target=\"_blank\">JSON: The JavaScript subset that isn&#8217;t</a></li>\n<li class=\"zemanta-article-ul-li-image zemanta-article-ul-li\" style=\"padding: 0; background: none; list-style: none; display: block; float: left; vertical-align: top; text-align: left; width: 84px; font-size: 11px; margin: 2px 10px 10px 2px;\"><a style=\"box-shadow: 0px 0px 4px #999; padding: 2px; display: block; border-radius: 2px; text-decoration: none;\" href=\"http://www.digitalsurgeons.com/blog/learning-javascript-basics-tutorial/\" target=\"_blank\"><img style=\"padding: 0; margin: 0; border: 0; display: block; width: 80px; max-width: 100%;\" src=\"http://i.zemanta.com/noimg_102_80_80.jpg\" alt=\"\" /></a><a style=\"display: block; overflow: hidden; text-decoration: none; line-height: 12pt; height: 80px; padding: 5px 2px 0 2px;\" href=\"http://www.digitalsurgeons.com/blog/learning-javascript-basics-tutorial/\" target=\"_blank\">Understanding JavaScript Basics</a></li>\n<li class=\"zemanta-article-ul-li-image zemanta-article-ul-li\" style=\"padding: 0; background: none; list-style: none; display: block; float: left; vertical-align: top; text-align: left; width: 84px; font-size: 11px; margin: 2px 10px 10px 2px;\"><a style=\"box-shadow: 0px 0px 4px #999; padding: 2px; display: block; border-radius: 2px; text-decoration: none;\" href=\"http://blog.mariosangiorgio.com/2013/01/08/a-developers-checklist/\" target=\"_blank\"><img style=\"padding: 0; margin: 0; border: 0; display: block; width: 80px; max-width: 100%;\" src=\"http://i.zemanta.com/noimg_66_80_80.jpg\" alt=\"\" /></a><a style=\"display: block; overflow: hidden; text-decoration: none; line-height: 12pt; height: 80px; padding: 5px 2px 0 2px;\" href=\"http://blog.mariosangiorgio.com/2013/01/08/a-developers-checklist/\" target=\"_blank\">A developer&#8217;s checklist</a></li>\n<li class=\"zemanta-article-ul-li-image zemanta-article-ul-li\" style=\"padding: 0; background: none; list-style: none; display: block; float: left; vertical-align: top; text-align: left; width: 84px; font-size: 11px; margin: 2px 10px 10px 2px;\"><a style=\"box-shadow: 0px 0px 4px #999; padding: 2px; display: block; border-radius: 2px; text-decoration: none;\" href=\"http://shop.oreilly.com/product/0636920027713.do\" target=\"_blank\"><img style=\"padding: 0; margin: 0; border: 0; display: block; width: 80px; max-width: 100%;\" src=\"http://i.zemanta.com/135076493_80_80.jpg\" alt=\"\" /></a><a style=\"display: block; overflow: hidden; text-decoration: none; line-height: 12pt; height: 80px; padding: 5px 2px 0 2px;\" href=\"http://shop.oreilly.com/product/0636920027713.do\" target=\"_blank\">JavaScript Enlightenment</a></li>\n</ul>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/?px\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=e46fb08c-1158-4e30-ac78-8a27e95de93d\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"cda2bc07-a6f3-5f71-ab1f-e125de142fce"}}