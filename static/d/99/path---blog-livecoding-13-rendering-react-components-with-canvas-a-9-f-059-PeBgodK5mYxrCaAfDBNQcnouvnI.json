{"data":{"wordpressPost":{"title":"Livecoding #13: rendering React components with canvas","content":"<p><em>This is a Livecoding Recap – an almost-weekly post about interesting things discovered while livecoding. It’s shorter than 500 words, and there are pictures! You can follow my channel <a href=\"https://livecoding.tv/swizec\">here</a>. New content almost <strong>every Sunday at 2pm PDT</strong>. There’s live chat. Come hang out.</em> ?</p>\n<p><iframe src=\"https://www.livecoding.tv/swizec/embed\" width=\"560\" height=\"315\" frameborder=\"0\" scrolling=\"no\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<p>This Sunday was all about rendering React components with canvas and smoothly animating 10k+ circles.</p>\n<p>We did it! Well, the canvas part. The smooth animation part … not so much. Turns out that part’s hard.</p>\n<p>It all started with some tedious coding to update the <a href=\"https://github.com/Swizec/react-particles-experiment\">React particles experiment</a> to D3 v4. Some idiot (me) had had the bright idea of changing that and not finishing the transition.</p>\n<p>With the release candidate version of D3v4, importing the entire library no longer works. From now on, you have to do something like <code>import { randomNormal } from 'd3'</code> to get specific bits and pieces. This is tedious, but it produces smaller bundles in the end. All in all, it’s better this way.</p>\n<p>Our slow implementation was back. \\o/</p>\n<blockquote class=\"imgur-embed-pub\" lang=\"en\" data-id=\"w7nSJGI\"><p><a href=\"http://imgur.com/w7nSJGI\">View post on imgur.com</a></p></blockquote>\n<p><script async src=\"//s.imgur.com/min/embed.js\" charset=\"utf-8\"></script></p>\n<p>Then we turned to <a href=\"https://github.com/lavrton/react-konva\">react-konva</a>, <em>“a JavaScript library for drawing complex canvas graphics using React.”</em> In theory, we should be able to render our particles using HTML5 canvas without changing our code too much.</p>\n<p>It’s based on the <a href=\"http://konvajs.github.io/\">Konva</a> library, which looks like a sort of D3 for canvas. It gives you a bunch of useful abstractions to make 2d graphicsing easier.</p>\n<p>To my surprise, the conversion <em>was</em> simple.</p>\n<p>We had to change our main render method to use a Konva <code>Stage</code> instead of an <code>&lt;svg&gt;</code> node:</p>\n<pre lang=\"javascript\">\r\n<Stage width={this.props.svgWidth} height={this.props.svgHeight}>\r\n    <Layer>\r\n       <Particles particles={this.props.particles} />\r\n    </Layer>\r\n</Stage>\r\n</pre>\n<p>We also wrapped it in a big <code>&lt;div&gt;</code> to help D3 detect the mouse events we need for particle generation. Yes, we could have moved away from D3 for those, but it was already coded up, so why change?</p>\n<p>We had to change the <code>Particles</code> render method to use Konva’s <code>Circle</code> component.</p>\n<pre lang=\"javascript\">\r\n<Group>\r\n   {particles.map(particle =>\r\n      <Circle radius=\"1.8\" x={particle.x} y={particle.y} key={particle.id} fill=\"black\" />\r\n   )}\r\n</Group>\r\n</pre>\n<p>Things Just Worked™. Kind of. Our animation looked less than smooth, even with just 200 particles. With a few thousand, it was comically bad.</p>\n<blockquote class=\"imgur-embed-pub\" lang=\"en\" data-id=\"X9a7hzp\"><p><a href=\"http://imgur.com/X9a7hzp\">View post on imgur.com</a></p></blockquote>\n<p><script async src=\"//s.imgur.com/min/embed.js\" charset=\"utf-8\"></script></p>\n<p>Not cool, React. Not cool. Canvas is supposed to be super fast! Maybe this <em>is</em> a bit faster than the SVG approach? It’s hard to tell.</p>\n<p>We did some profiling and discovered that calculating a new frame takes only 7 milliseconds. Flushing those changes to React components … heh … that took anywhere from 200ms to 980ms.</p>\n<p>?</p>\n<p>Yikes.</p>\n<p>The culprit seems to be a function called <code>updateChildren</code> deep in the bowels of React.</p>\n<p>We’ll find a workaround on Sunday the 10th of July. There are several promising venues to explore, anything from using better Konva components (FastLayer is a thing) to avoiding prop updates as the driver of our animation. Somehow. We’ll figure it out.</p>\n<p>See you next time.</p>\n<p>PS: the edited and improved versions of these videos are becoming a video course. Readers of the engineer package of <a href=\"http://swizec.com/reactd3js/\">React+d3js ES6</a> get the video course for free when it’s ready.</p>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"b668153b-8098-577c-b766-c87368e2d07d"}}