{"data":{"wordpressPost":{"title":"Blackbox testing node.js apps","content":"<p>One of the best features in <a class=\"zem_slink\" title=\"Django (Web framework)\" href=\"http://www.djangoproject.com\" rel=\"homepage\" target=\"_blank\">Django</a>is the test client that comes with the test framework -&gt; blackbox testing baby, yeah!</p>\n<div style=\"width: 250px\" class=\"wp-caption alignright\"><a href=\"http://www.flickr.com/photos/23739231@N00/1972546648\" target=\"_blank\"><img class=\"zemanta-img-inserted zemanta-img-configured\" title=\"Black box flight recorder\" src=\"http://farm3.static.flickr.com/2215/1972546648_e63db0846e_m.jpg\" alt=\"Black box flight recorder\" width=\"240\" height=\"180\" /></a><p class=\"wp-caption-text\">Black box flight recorder (Photo credit: edvvc)</p></div>\n<p><a class=\"zem_slink\" title=\"Black-box testing\" href=\"http://en.wikipedia.org/wiki/Black-box_testing\" rel=\"wikipedia\" target=\"_blank\">Blackbox testing</a> is my favourite kind of testing. Much more useful than <a class=\"zem_slink\" title=\"Unit testing\" href=\"http://en.wikipedia.org/wiki/Unit_testing\" rel=\"wikipedia\" target=\"_blank\">unit tests</a> and generally a lot easier to write, maintain and deal with. And that&#8217;s because rather than making sure all your functions and deep internals are behaving like they should, you only test what really matters in a web app.</p>\n<p><em>Does the right output happen for this specific input?</em></p>\n<p>Your users don&#8217;t care that you have full unit test coverage. They will never see the output of all your internal functions and methods and database drivers and whatnot. All they care is that if they put in <em>X</em> they get the correct <em>Y</em> out.</p>\n<p>The two main benefits of blackbox testing for a developer are:</p>\n<ol>\n<li>Low maintenance tests &#8211; you don&#8217;t have to rewrite the whole <a class=\"zem_slink\" title=\"Test suite\" href=\"http://en.wikipedia.org/wiki/Test_suite\" rel=\"wikipedia\" target=\"_blank\">test suite</a> when refactoring the deep internals of your app</li>\n<li>Integration tests &#8211; since you&#8217;re only matching input to output you are testing your whole chain, everything from routing, to database connections and the business logic of the app itself</li>\n</ol>\n<p>Although it&#8217;s still prudent to write enough of these tests to check for correctly returning errors, making sure your app doesn&#8217;t crash on strange inputs and so on.</p>\n<p>It&#8217;s also important not to forget unit tests for core business logic. That&#8217;s algorithmic stuff, algorithms should have unit tests attached to them. But in general, web apps aren&#8217;t algorithms, they&#8217;re systems. And systems need blackbox tests.</p>\n<h2>Doing it in node.js</h2>\n<p>Ok so blackbox testing is an awesome fit for web apps. But how do you do them?</p>\n<p>In django this is simple, when in a test you just say something like</p>\n<pre lang=\"python\">response = self.client.get(\"/my/url\")\r\nself.assertEqual(response.status, 200)</pre>\n<p>and check the response is what you expected. The test client automagically ensures there is a fake server running, that it takes requests, responds and is then torn down when you&#8217;re done testing.</p>\n<p>Until recently the only way I knew of doing this with node.js has been to run the server and send it requests. But that&#8217;s a bit lame, after all, I want to just run the tests. Of course I&#8217;m going to forget to run the server every single time.</p>\n<p>Not to mention you have to keep restarting it when you change the code.</p>\n<p>Enter <a href=\"https://github.com/visionmedia/supertest\" target=\"_blank\">Supertest</a>, stage left.</p>\n<p>Supertest is a high-level http test library based on superagent, which in turn is a high-level abstraction thingy for doing http requests.</p>\n<p>It takes any type of server object and lets you run requests and check for expected results in a very simple manner. If need be, you can even drop down to the low-level API&#8217;s for http requests.</p>\n<p>A simple (mocha) test might look something like this:</p>\n<pre lang=\"javascript\">var app = require('../app.js');\r\n\r\ndescribe('GET /users', function(){\r\n  it('respond with json', function(done){\r\n    request(app)\r\n      .get('/user')\r\n      .set('Accept', 'application/json')\r\n      .expect('Content-Type', /json/)\r\n      .expect(200, done);\r\n  })\r\n})</pre>\n<p>Where <em>app</em> is, for example, an express.js server &#8211;  <em>request</em> is our test client. We are just checking that sending a <a class=\"zem_slink\" title=\"Hypertext Transfer Protocol\" href=\"http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" rel=\"wikipedia\" target=\"_blank\">GET request</a> to <em>/user</em> will return some sort of json and that the status code will be 200.</p>\n<p>If the server isn&#8217;t running when doing that <em>require</em> then supertest will make sure it is bound to an ephemereal port and then brought back down after the tests are done.</p>\n<p>Oh and because of <a href=\"https://github.com/visionmedia/superagent\" target=\"_blank\">superagent</a> you can send any type of request and check for any type of response.</p>\n<p>Awesome.</p>\n<h6 class=\"zemanta-related-title\" style=\"font-size: 1em;\">Related articles</h6>\n<ul class=\"zemanta-article-ul zemanta-article-ul-image\" style=\"margin-left: 0; display: inline-block; list-style-type: none;\">\n<li class=\"zemanta-article-ul-li-image zemanta-article-ul-li\" style=\"display: inline-block; vertical-align: top; text-align: left; font-size: 12px; width: 80px; height: 240px; margin: 10px 40px 20px 0px; zoom: 1; *display: inline;\"><a href=\"http://stackoverflow.com/questions/10960502/foreman-nodejs-mongoskin-how-to-connect-to-mongodb-from-mongo-cli\" target=\"_blank\"><img style=\"padding: 0; margin: 0 10px 10px 0; border: 0; display: block; box-shadow: 1px 1px 3px #999;\" src=\"http://i.zemanta.com/93336637_80_80.jpg\" alt=\"\" /></a><a style=\"display: block; width: 80px; height: 90px; overflow: hidden; text-decoration: none; line-height: 14pt;\" href=\"http://stackoverflow.com/questions/10960502/foreman-nodejs-mongoskin-how-to-connect-to-mongodb-from-mongo-cli\" target=\"_blank\">Foreman + NodeJS + MongoSkin: How to connect to mongodb from mongo cli?</a>\n<div style=\"clear: both; margin: 10px 0 10px 0;\">\n<hr style=\"margin: 0;\" />\n</div>\n</li>\n<li class=\"zemanta-article-ul-li-image zemanta-article-ul-li\" style=\"display: inline-block; vertical-align: top; text-align: left; font-size: 12px; width: 80px; height: 240px; margin: 10px 40px 20px 0px; zoom: 1; *display: inline;\"><a href=\"http://stackoverflow.com/questions/11546715/node-js-api-choking-with-concurrent-connections\" target=\"_blank\"><img style=\"padding: 0; margin: 0 10px 10px 0; border: 0; display: block; box-shadow: 1px 1px 3px #999;\" src=\"http://i.zemanta.com/101387271_80_80.jpg\" alt=\"\" /></a><a style=\"display: block; width: 80px; height: 90px; overflow: hidden; text-decoration: none; line-height: 14pt;\" href=\"http://stackoverflow.com/questions/11546715/node-js-api-choking-with-concurrent-connections\" target=\"_blank\">Node.js API choking with concurrent connections</a>\n<div style=\"clear: both; margin: 10px 0 10px 0;\">\n<hr style=\"margin: 0;\" />\n</div>\n</li>\n<li class=\"zemanta-article-ul-li-image zemanta-article-ul-li\" style=\"display: inline-block; vertical-align: top; text-align: left; font-size: 12px; width: 80px; height: 240px; margin: 10px 40px 20px 0px; zoom: 1; *display: inline;\"><a href=\"http://www.joezimjs.com/javascript/node-js-for-true-beginners/\" target=\"_blank\"><img style=\"padding: 0; margin: 0 10px 10px 0; border: 0; display: block; box-shadow: 1px 1px 3px #999;\" src=\"http://i.zemanta.com/101502577_80_80.jpg\" alt=\"\" /></a><a style=\"display: block; width: 80px; height: 90px; overflow: hidden; text-decoration: none; line-height: 14pt;\" href=\"http://www.joezimjs.com/javascript/node-js-for-true-beginners/\" target=\"_blank\">Node.js for True Beginners</a>\n<div style=\"clear: both; margin: 10px 0 10px 0;\">\n<hr style=\"margin: 0;\" />\n</div>\n</li>\n<li class=\"zemanta-article-ul-li-image zemanta-article-ul-li\" style=\"display: inline-block; vertical-align: top; text-align: left; font-size: 12px; width: 80px; height: 240px; margin: 10px 40px 20px 0px; zoom: 1; *display: inline;\"><a href=\"http://architects.dzone.com/articles/when-net-dev-decides-its-time\" target=\"_blank\"><img style=\"padding: 0; margin: 0 10px 10px 0; border: 0; display: block; box-shadow: 1px 1px 3px #999;\" src=\"http://i.zemanta.com/noimg_06_80_80.jpg\" alt=\"\" /></a><a style=\"display: block; width: 80px; height: 90px; overflow: hidden; text-decoration: none; line-height: 14pt;\" href=\"http://architects.dzone.com/articles/when-net-dev-decides-its-time\" target=\"_blank\">When a .NET Dev Decides It&#8217;s Time for Node.js</a>\n<div style=\"clear: both; margin: 10px 0 10px 0;\">\n<hr style=\"margin: 0;\" />\n</div>\n</li>\n<li class=\"zemanta-article-ul-li-image zemanta-article-ul-li\" style=\"display: inline-block; vertical-align: top; text-align: left; font-size: 12px; width: 80px; height: 240px; margin: 10px 40px 20px 0px; zoom: 1; *display: inline;\"><a href=\"http://stackoverflow.com/questions/2353818/how-do-i-get-started-with-node-js/9629682\" target=\"_blank\"><img style=\"padding: 0; margin: 0 10px 10px 0; border: 0; display: block; box-shadow: 1px 1px 3px #999;\" src=\"http://i.zemanta.com/89920188_80_80.jpg\" alt=\"\" /></a><a style=\"display: block; width: 80px; height: 90px; overflow: hidden; text-decoration: none; line-height: 14pt;\" href=\"http://stackoverflow.com/questions/2353818/how-do-i-get-started-with-node-js/9629682\" target=\"_blank\">Answer by Nevir for How do I get started with Node.js</a>\n<div style=\"clear: both; margin: 10px 0 10px 0;\">\n<hr style=\"margin: 0;\" />\n</div>\n</li>\n</ul>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/?px\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" src=\"http://img.zemanta.com/zemified_e.png?x-id=bdac80da-9a78-4071-ac4b-f2d10e0a4b65\" alt=\"Enhanced by Zemanta\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"bfaf7474-b275-5e49-8b17-e46015201aa5"}}