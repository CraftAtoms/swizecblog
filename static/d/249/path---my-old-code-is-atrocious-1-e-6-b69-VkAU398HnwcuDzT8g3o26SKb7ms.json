{"data":{"wordpressPost":{"title":"My old code is atrocious","content":"<div style=\"width: 488px\" class=\"wp-caption alignnone\"><img title=\"Fixing others' code\" alt=\"Fixing others' code\" src=\"https://draftin.com:443/images/3841?token=i6oZVe99y_4X4Sxwb29TNVuyoc7PRn0xV9StF1ouMw8dPANBtIiaKw7ZCvONp_d_f6NFQmRVFF8IWhAf64igTWc\" width=\"478\" height=\"309\" /><p class=\"wp-caption-text\">Fixing others&#8217; code</p></div>\n<p>&nbsp;</p>\n<p>Fixing old code is always a humbling experience. Especially your own.</p>\n<p>That&#8217;s a lie. Fixing other people&#8217;s old code is a maddening experience that puts you in a stabby mood. At the very least you&#8217;d like to punch the programmer in the face repeatedly while screaming <em>&#8220;WHY DID YOU DO THAT LIKE THAT WHAT WERE YOU THINKING ARE YOU A COMPLETE IDIOT OR JUST A TOTAL IDIOT?&#8221;</em> and showering them with spit. Veins popping out of your neck and forehead. Face going red. The whole spiel.</p>\n<p>Your own code though &#8230; that&#8217;s humbling.</p>\n<h2>Fixing an old project</h2>\n<p>A few weeks ago, closer to a month or two than a fortnight, a project of mine suddenly went offline. I usually don&#8217;t notice, which is a terrible habit, but I tend to build cool things, being excited for a week or two, then letting them rot and fall offline.</p>\n<p>But not <a href=\"https://github.com/Swizec/Personal-Runway\" target=\"_blank\">this project</a>. This is my crowning glory, the coolest thing I&#8217;ve ever built. That strange cacophony of technologies that sends me an email every few days saying <em>&#8220;Hey you, you&#8217;re doing fine. Keep spending.&#8221;</em> or <em>&#8220;What the fuck are you doing idiot? Your money is vanishing! STAHP!&#8221;</em></p>\n<p>It&#8217;s really neat.</p>\n<p>But man is it built out of some truly atrocious code. It started as a <a class=\"zem_slink\" title=\"Haskell (programming language)\" href=\"http://haskell.org\" target=\"_blank\" rel=\"homepage\">Haskell</a> learning experiment over new year&#8217;s break two years ago and, you know, back then I really thought I was a great engineer.</p>\n<p>Last night I almost cried.</p>\n<h2>Atrocities</h2>\n<p>The first atrocity committed in the name of hacking was writing the program in two distinct languages for reasons that were weak at best.</p>\n<p>I used node.js to drive the main process and talk to API&#8217;s. <code>runner.js</code> calls other parts of the code, talks to mongodb, and runs the algorithmic Haskell part as a subprocess.</p>\n<p>The Haskell and node.js part communicate via mongodb.</p>\n<p>I didn&#8217;t even use a mongodb library. Hacked something together because mongoose &#8211; ORM-like mongodb library for node &#8211; was too slow for some reason. And I have no idea how Haskell does it. Monads continue to confuse me.</p>\n<p>To make matters even more worse, I didn&#8217;t use any libraries to talk to either <a class=\"zem_slink\" title=\"Toggl.com\" href=\"http://www.toggl.com\" target=\"_blank\" rel=\"homepage\">Toggl</a> or <a href=\"http://toshl.com/\">Toshl</a>. Partly because Toshl only released an official API this summer and other than <a href=\"http://swizec.com/blog/about-achieving-polymorphism-in-javascript/swizec/6370\">my half baked attempt from two weeks ago</a> there are no libraries, partly because I don&#8217;t know why.</p>\n<p>The Toshl part is the worst. I fake user interactions to log into their service and export a <a class=\"zem_slink\" title=\"Comma-separated values\" href=\"http://en.wikipedia.org/wiki/Comma-separated_values\" target=\"_blank\" rel=\"wikipedia\">CSV file</a> with data, then parse it locally.</p>\n<p>Yes that includes sending plaintext passwords over https. Yes it also includes saving said password in a file on the server.</p>\n<p>Why yes, yes I do use that email/password combination elsewhere.</p>\n<p>Wonderful innit?</p>\n<p>And don&#8217;t even get me started on the Toggl implementation. That&#8217;s what broke by the way. Version 6 of their API was deprecated on September 1st and I just didn&#8217;t notice.</p>\n<p>I <em>know</em> there was a library for Toggl. I even remember using it. But the code I was fixing last night used <a href=\"https://github.com/visionmedia/superagent\">superagent</a> to make JSON requests manually.</p>\n<p>Yes that includes setting <code>Accept: application/json</code> headers and utf8 encoding.</p>\n<p>Yup, there also wasn&#8217;t any abstraction at all. The three API calls were meticulously spelled out. Everything from bits of the URL (https, toggl.com, &#8230;), to specifying the headers every time.</p>\n<p>All of that became this function:</p>\n<pre lang=\"javascript\">var __request = function (url, query, callback) {\r\n    callback = arguments[arguments.length-1];\r\n    query = typeof query === 'function' ? {} : query;\r\n\r\n    request.get({protocol: 'https',\r\n                 hostname: 'www.toggl.com',\r\n                 pathname: url,\r\n                 query: query,\r\n                 auth: require('./secrets').toggl_api+':api_token'})\r\n        .set('Accept-Charset', 'utf-8')\r\n        .set('Accept', 'application/json')\r\n        .end(callback);\r\n};</pre>\n<p>Which lets me do this:</p>\n<pre lang=\"javascript\">var workspaces = function (callback) {\r\n    __request('/api/v8/workspaces', callback);\r\n};</pre>\n<p>Much better than essentially having <code>__request</code> function repeated every time.</p>\n<p>Had I been using an actively developed library maybe my project wouldn&#8217;t break. Somebody else would make sure my code still knew how to talk with Toggl by virtue of updating their library.</p>\n<p>Alas, I was being an idiot. Alas alas I didn&#8217;t <em>really</em> fix the situation last night either.</p>\n<p>To top it off, the CSV parsing library changed in the newer version so I had to fix that part of my code as well.</p>\n<p>And I will never understand why looping through aaaaaall the data for both Toshl and Toggl was a good idea when all I care about are the last three days. Everything else is in mongodb anyway.</p>\n<p>Another time maybe. When I once more muster the courage to go fixing my old code.</p>\n<p>I just hope I still know enough Haskell to fix the algorithmic part if it ever breaks. No comments. No explanation of the algorithm. D&#8217;oh.</p>\n<div class=\"zemanta-pixie\" style=\"margin-top: 10px; height: 15px;\"><a class=\"zemanta-pixie-a\" title=\"Enhanced by Zemanta\" href=\"http://www.zemanta.com/?px\"><img class=\"zemanta-pixie-img\" style=\"border: none; float: right;\" alt=\"Enhanced by Zemanta\" src=\"http://img.zemanta.com/zemified_e.png?x-id=36ac71d4-54e8-45d0-a899-64e537bd545a\" /></a></div>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"e4543e82-3568-52be-befd-d4fb9b8f03a1"}}