{"data":{"wordpressPost":{"title":"Teaching beginners","content":"<p>On Monday I built <a href=\"https://swizec.com/blog/conways-game-of-life-in-google-docs/swizec/6931\">Conway&#8217;s Game of Life in Google Docs</a>. Prep work for a short talk given to the non-technical part of our team at <a href=\"https://www.yup.com/\">Yup</a>. It was supposed to make it fun and easy to show everyone how to make their own lives easier.</p>\n<p><em>&#8220;Is this how you hack websites?&#8221;</em> &lt;- first question</p>\n<p>Nope. Not easy. </p>\n<p>Everyone loved the game of life. They grokked that complex patterns emerge from four simple rules. They could see the beauty in that. They loved the Wikipedia gifs of gliders and oscillators and other things people have built in Life.</p>\n<p><em>&#8220;This is a boring game, man. Not only is it slow, but you&#8217;re playing it in a spreadsheet.&#8221;</em></p>\n<p>That was a fair point. The lack of timers in gDocs <em>does</em> make the game tedious to play and not many people associate spreadsheets with fun. I&#8217;m sure they exist, I just haven&#8217;t met them yet.</p>\n<p>Nobody grokked how implementing a silly game from 1970 translates to something practical. The conceptual leap from <em>&#8220;You can manipulate cells to make patterns&#8221;</em> to <em>&#8220;You can automate common tasks&#8221;</em> proved too hard.</p>\n<p>I should have seen that coming.</p>\n<p>Translating one problem to another is <strong>the hardest thing in software</strong>. Like, the hardest and most hardcorest of things. It took 4 years of hard computer science before somebody showed me how to formally prove that one problem is the same as another.</p>\n<p>I expected everyone to get it the first time they saw some code. That was dumb.</p>\n<p>Seeing the potential in a technique isn&#8217;t quite as hard as proving that two problems are the same, but it&#8217;s still hard. My whole life consists of:</p>\n<ol>\n<li>See problem</li>\n<li>Find 1 of N common patterns that solves it</li>\n<li>Adapt solution to problem</li>\n</ol>\n<p><strong>^ this is why experience matters ^</strong></p>\n<p>Most people&#8217;s lives don&#8217;t look like that. I should have used a tangible example and that would make the presentation better and also miss the core tenet of coding.</p>\n<p>From that point onward, the presentation was a train wreck.</p>\n<p>You say variable. Their eyes glaze over. 3 people explain it because they&#8217;ve taken JavaScript classes or they&#8217;re engineers. Each has a different explanation.</p>\n<p>You say function, their eyes glaze over. 3 people explain it. Each words it differently.</p>\n<p>You say object, their eyes … you get the picture.</p>\n<p>You say loop … yeah …</p>\n<p>I never realized how much jargon programmers use. How much jargon <em>I</em> use in my own head! Concepts I don&#8217;t even realize are jargon. Can I even sound like a normal person anymore?</p>\n<p>Like, how do you explain an object? It&#8217;s an object. It&#8217;s a word that exists in the English language and has the same meaning both in English and in JavaScript.</p>\n<p>But people don&#8217;t think of objects as bags of methods and properties. Programmers do.</p>\n<p>It was like culture shock from hell. We couldn&#8217;t even find a common language to speak in. The whole thing was a mess.</p>\n<p>I didn&#8217;t teach anyone how to code who didn&#8217;t know how to code before my talk. I don&#8217;t even think I excited anyone about learning more. My presentation didn&#8217;t make anyone feel empowered.</p>\n<p>At most I managed to convince everyone that programming is an impenetrable arcane magic known only to a select few.</p>\n<p>My job security is now safe. Perhaps too safe.</p>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"578f706b-f4a2-5721-a04c-05d9aaed3942"}}