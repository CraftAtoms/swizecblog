{"data":{"wordpressPost":{"title":"Livecoding Recap 48- Why contributing to big opensource projects is still hard","content":"<p><em>This is a Livecoding Recap â€“ an almost-weekly post about interesting things discovered while livecoding. Usually shorter than 500 words. Often with pictures. Livecoding happens almost <strong>every Sunday at 2pm PDT</strong> on multiple channels. You should follow <a href=\"https://www.youtube.com/TheSwizec\">My Youtube</a> channel to catch me live.</em></p>\n<p><iframe width=\"580\" height=\"326\" src=\"https://www.youtube.com/embed/1eoa259yPBk?feature=oembed\" frameborder=\"0\" allowfullscreen></iframe></p>\n<p><a href=\"https://www.gatsbyjs.org/\">GatsbyJS</a> has a bugfeature that I don&#8217;t like and I&#8217;m gonna fix it! Biggest opensource project since I poked around phpBB back in high school.</p>\n<p>I can do this!</p>\n<figure><img src=\"http://images2.fanpop.com/image/photos/8500000/Single-Ladies-single-ladies-8586971-424-550.jpg\" alt=\"\" /></figure>\n<p>GatsbyJS is a React-based static site generator. The reason I&#8217;m so invested is because almost everything I build with React is a static site. Landing pages, single data visualizations, stuff like that. All static.</p>\n<p>Gatsby has a plugin, <code>gatsby-transformer-remark</code>, that lets you write copy-focused pages in Markdown. React gets tedious when you want to focus on writing copy.</p>\n<img src=\"https://i.imgur.com/xEuspE9.gif\" width=\"1091\" height=\"543\" class=\"aligncenter size-large\" />\n<p>This remark transformer comes with a feature I love: <code>tableOfContents</code>. Looks at your header tags and generates a table of contents. Great for making your site easier to navigate.</p>\n<p>But there&#8217;s a problem.</p>\n<p>Table of contents uses only hash links like <code>#this-is-a-subheading</code>. This works great when it&#8217;s on the same page as your content, but itâ€™s not so great when you put it on an index page.</p>\n<p>Index pages are often at different URLs than their content pages. So when you try to link with just a hash, it doesn&#8217;t go anywhere.</p>\n<p>I decided to fix that and use absolute links.</p>\n<p>So we looked at the <code>CONTRIBUTING.md</code> doc in Gatsby&#8217;s repository, and it was wonderful. Tells you everything you need to set up a development environment so you can work on Gatsby and your test site immediately picks up on it.</p>\n<ol>\n<li>Fork and clone Gatsby âœ…</li>\n<li>Run <code>yarn run bootstrap</code> âœ…</li>\n</ol>\n<p>Waitâ€¦ noâ€¦ that didn&#8217;t work. Step 2 and we&#8217;re already blocked. ðŸ˜­</p>\n<p>We filed a <a href=\"https://github.com/gatsbyjs/gatsby/issues/2395\">helpful issue</a> complaining that nothing works and everything is broken. The command didn&#8217;t run through, dependencies were missing, and everything blew up in our face.</p>\n<p>2 hours later, we had installed some 30 missing packages and aaaaalmost got a clean <code>yarn test</code> run. Very important to have all your tests passing before you start poking around a large codebase.</p>\n<p>A very helpful person named <code>m-allanson</code> saved our asses. They found a commit from Gatsby&#8217;s head maintaner that changed something in a config â€“Â removed <code>yarn workspaces</code> whatever the hell that is â€“ and was just 23 hours old.</p>\n<p>All our troubles were because of a commit from less than a day ago. Talk about timing!</p>\n<p><em>And</em> it was the kind of problem only a new contributor could discover. Everything worked for people who had stuff installed from before.</p>\n<p>Soâ€¦ yay? We helped?</p>\n<p>Once we got up and running, it was almost time to stop livecoding for the day. We had just enough time to figure out where in the code we&#8217;re going to have to fix those links.</p>\n<p>A file called <code>gatsby-transformer-remark/srcextend-node-type.js</code>.</p>\n<p>This function ðŸ‘‡</p>\n<pre lang=\"javascript\">\nasync function getTableOfContents(markdownNode) {\n const cachedToc = await cache.get(tableOfContentsCacheKey(markdownNode))\n //if (cachedToc) {\n // return cachedToc\n //} else {\n const ast = await getAST(markdownNode)\n const tocAst = mdastToToc(ast)\n let toc\n if (tocAst.map) {\n //toc = hastToHTML(toHAST(tocAst.map))\n toc = toHAST(tocAst.map)\n console.log(require('util').inspect(tocAst.map, false, null))\n } else {\n toc = ``\n }\n cache.set(tableOfContentsCacheKey(markdownNode), toc)\n return toc\n //}\n }\n</pre>\n<p>Note the <code>console.log</code>. That&#8217;s where we have to hook into the toc abstract syntax tree and change the links.</p>\n<p>Not sure how yet, but how hard can it be ðŸ¤”</p>\n"},"site":{"siteMetadata":{"title":"Swizec Blog","subtitle":"Fetch Data From Local WP Install"}}},"pageContext":{"id":"ab10b88f-9372-52d5-a762-d9ea90b641c3"}}